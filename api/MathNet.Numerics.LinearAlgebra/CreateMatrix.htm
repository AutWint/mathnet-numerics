<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <title>CreateMatrix - Math.NET Numerics Documentation</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <link type="text/css" rel="stylesheet" href="../main.css"/>
    <script type="text/javascript" src="../js/jquery-1.3.2.min.js"></script>
    <script type="text/javascript" src="../js/jquery.scrollTo-min.js"></script>
    <script type="text/javascript" src="../js/navigation.js"></script>
    <script type="text/javascript" src="../js/example.js"></script>
  </head>
  <body><div id="namespaces">
	<h2 class="fixed">Namespaces</h2>
	<div class="scroll">
		<ul>
			<li>
          <a href="../MathNet.Numerics/index.htm">MathNet.Numerics</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Differentiation/index.htm">MathNet.Numerics.Differentiation</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Distributions/index.htm">MathNet.Numerics.Distributions</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Financial/index.htm">MathNet.Numerics.Financial</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.IntegralTransforms/index.htm">MathNet.Numerics.IntegralTransforms</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Integration/index.htm">MathNet.Numerics.Integration</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Interpolation/index.htm">MathNet.Numerics.Interpolation</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra/index.htm" class="current">MathNet.Numerics.LinearAlgebra</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Complex/index.htm">MathNet.Numerics.LinearAlgebra.Complex</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Complex.Solvers/index.htm">MathNet.Numerics.LinearAlgebra.Complex.Solvers</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Complex32/index.htm">MathNet.Numerics.LinearAlgebra.Complex32</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Complex32.Solvers/index.htm">MathNet.Numerics.LinearAlgebra.Complex32.Solvers</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Double/index.htm">MathNet.Numerics.LinearAlgebra.Double</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Double.Solvers/index.htm">MathNet.Numerics.LinearAlgebra.Double.Solvers</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Factorization/index.htm">MathNet.Numerics.LinearAlgebra.Factorization</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Single/index.htm">MathNet.Numerics.LinearAlgebra.Single</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Single.Solvers/index.htm">MathNet.Numerics.LinearAlgebra.Single.Solvers</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Solvers/index.htm">MathNet.Numerics.LinearAlgebra.Solvers</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Storage/index.htm">MathNet.Numerics.LinearAlgebra.Storage</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearRegression/index.htm">MathNet.Numerics.LinearRegression</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.OdeSolvers/index.htm">MathNet.Numerics.OdeSolvers</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Optimization/index.htm">MathNet.Numerics.Optimization</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Optimization.LineSearch/index.htm">MathNet.Numerics.Optimization.LineSearch</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Optimization.ObjectiveFunctions/index.htm">MathNet.Numerics.Optimization.ObjectiveFunctions</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Optimization.TrustRegion/index.htm">MathNet.Numerics.Optimization.TrustRegion</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Providers.Common.Cuda/index.htm">MathNet.Numerics.Providers.Common.Cuda</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Providers.Common.Mkl/index.htm">MathNet.Numerics.Providers.Common.Mkl</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Providers.Common.OpenBlas/index.htm">MathNet.Numerics.Providers.Common.OpenBlas</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Providers.FourierTransform/index.htm">MathNet.Numerics.Providers.FourierTransform</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Providers.LinearAlgebra/index.htm">MathNet.Numerics.Providers.LinearAlgebra</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Providers.LinearAlgebra.OpenBlas/index.htm">MathNet.Numerics.Providers.LinearAlgebra.OpenBlas</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Providers.SparseSolver/index.htm">MathNet.Numerics.Providers.SparseSolver</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Random/index.htm">MathNet.Numerics.Random</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.RootFinding/index.htm">MathNet.Numerics.RootFinding</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Statistics/index.htm">MathNet.Numerics.Statistics</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Statistics.Mcmc/index.htm">MathNet.Numerics.Statistics.Mcmc</a>
      </li>
		</ul>
	</div>
</div><div id="types">
  <h2 class="fixed">Types in MathNet.Numerics.LinearAlgebra</h2>
	<div class="scroll">
		<ul>
				<li>
            <a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm" class="current">CreateMatrix</a>
        </li>
				<li>
            <a href="../MathNet.Numerics.LinearAlgebra/CreateVector.htm">CreateVector</a>
        </li>
				<li>
            <a href="../MathNet.Numerics.LinearAlgebra/ExistingData.htm">ExistingData</a>
        </li>
				<li>
            <a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a>
        </li>
				<li>
            <a href="../MathNet.Numerics.LinearAlgebra/MatrixBuilder`1.htm">MatrixBuilder&lt;T&gt;</a>
        </li>
				<li>
            <a href="../MathNet.Numerics.LinearAlgebra/MatrixExtensions.htm">MatrixExtensions</a>
        </li>
				<li>
            <a href="../MathNet.Numerics.LinearAlgebra/Symmetricity.htm">Symmetricity</a>
        </li>
				<li>
            <a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a>
        </li>
				<li>
            <a href="../MathNet.Numerics.LinearAlgebra/VectorBuilder`1.htm">VectorBuilder&lt;T&gt;</a>
        </li>
				<li>
            <a href="../MathNet.Numerics.LinearAlgebra/VectorExtensions.htm">VectorExtensions</a>
        </li>
				<li>
            <a href="../MathNet.Numerics.LinearAlgebra/Zeros.htm">Zeros</a>
        </li>
		</ul>
	</div>
</div>
    <div class="header">
		<p class="class"><strong>Type</strong> CreateMatrix</p>
		<p><strong>Namespace</strong> MathNet.Numerics.LinearAlgebra</p>
	</div>
    <div class="sub-header">
		

			<h3 class="section">Static Functions</h3>
			<ul>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#Dense``1">Dense&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#Dense``1">Dense&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#Dense``1">Dense&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#Dense``1">Dense&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#Dense``1">Dense&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#DenseDiagonal``1">DenseDiagonal&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#DenseDiagonal``1">DenseDiagonal&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#DenseDiagonal``1">DenseDiagonal&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#DenseIdentity``1">DenseIdentity&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#DenseIdentity``1">DenseIdentity&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#DenseOfArray``1">DenseOfArray&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#DenseOfColumnArrays``1">DenseOfColumnArrays&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#DenseOfColumnArrays``1">DenseOfColumnArrays&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#DenseOfColumnMajor``1">DenseOfColumnMajor&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#DenseOfColumns``1">DenseOfColumns&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#DenseOfColumns``1">DenseOfColumns&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#DenseOfColumnVectors``1">DenseOfColumnVectors&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#DenseOfColumnVectors``1">DenseOfColumnVectors&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#DenseOfDiagonalArray``1">DenseOfDiagonalArray&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#DenseOfDiagonalArray``1">DenseOfDiagonalArray&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#DenseOfDiagonalVector``1">DenseOfDiagonalVector&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#DenseOfDiagonalVector``1">DenseOfDiagonalVector&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#DenseOfIndexed``1">DenseOfIndexed&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#DenseOfMatrix``1">DenseOfMatrix&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#DenseOfMatrixArray``1">DenseOfMatrixArray&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#DenseOfRowArrays``1">DenseOfRowArrays&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#DenseOfRowArrays``1">DenseOfRowArrays&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#DenseOfRows``1">DenseOfRows&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#DenseOfRows``1">DenseOfRows&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#DenseOfRowVectors``1">DenseOfRowVectors&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#DenseOfRowVectors``1">DenseOfRowVectors&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#Diagonal``1">Diagonal&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#Diagonal``1">Diagonal&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#Diagonal``1">Diagonal&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#Diagonal``1">Diagonal&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#Diagonal``1">Diagonal&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#Diagonal``1">Diagonal&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#DiagonalIdentity``1">DiagonalIdentity&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#DiagonalIdentity``1">DiagonalIdentity&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#DiagonalOfDiagonalArray``1">DiagonalOfDiagonalArray&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#DiagonalOfDiagonalArray``1">DiagonalOfDiagonalArray&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#DiagonalOfDiagonalVector``1">DiagonalOfDiagonalVector&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#DiagonalOfDiagonalVector``1">DiagonalOfDiagonalVector&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#Random``1">Random&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#Random``1">Random&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#Random``1">Random&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#RandomPositiveDefinite``1">RandomPositiveDefinite&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#RandomPositiveDefinite``1">RandomPositiveDefinite&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#RandomPositiveDefinite``1">RandomPositiveDefinite&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#SameAs``1">SameAs&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#SameAs``1">SameAs&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#SameAs``1">SameAs&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#SameAs``2">SameAs&lt;T, TU&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#SameAs``2">SameAs&lt;T, TU&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#Sparse``1">Sparse&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#Sparse``1">Sparse&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#Sparse``1">Sparse&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#Sparse``1">Sparse&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#SparseDiagonal``1">SparseDiagonal&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#SparseDiagonal``1">SparseDiagonal&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#SparseDiagonal``1">SparseDiagonal&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#SparseIdentity``1">SparseIdentity&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#SparseIdentity``1">SparseIdentity&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#SparseOfArray``1">SparseOfArray&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#SparseOfColumnArrays``1">SparseOfColumnArrays&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#SparseOfColumnArrays``1">SparseOfColumnArrays&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#SparseOfColumnMajor``1">SparseOfColumnMajor&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#SparseOfColumns``1">SparseOfColumns&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#SparseOfColumns``1">SparseOfColumns&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#SparseOfColumnVectors``1">SparseOfColumnVectors&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#SparseOfColumnVectors``1">SparseOfColumnVectors&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#SparseOfDiagonalArray``1">SparseOfDiagonalArray&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#SparseOfDiagonalArray``1">SparseOfDiagonalArray&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#SparseOfDiagonalVector``1">SparseOfDiagonalVector&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#SparseOfDiagonalVector``1">SparseOfDiagonalVector&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#SparseOfIndexed``1">SparseOfIndexed&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#SparseOfMatrix``1">SparseOfMatrix&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#SparseOfMatrixArray``1">SparseOfMatrixArray&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#SparseOfRowArrays``1">SparseOfRowArrays&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#SparseOfRowArrays``1">SparseOfRowArrays&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#SparseOfRowMajor``1">SparseOfRowMajor&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#SparseOfRows``1">SparseOfRows&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#SparseOfRows``1">SparseOfRows&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#SparseOfRowVectors``1">SparseOfRowVectors&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#SparseOfRowVectors``1">SparseOfRowVectors&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm#WithStorage``1">WithStorage&lt;T&gt;</a></li>
			</ul>
		

		
	</div>
	
	
	
	<h3 class="section">Public Static Functions</h3>
	
	<div id="Dense``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>Dense&lt;T&gt;</strong>(<a href="../MathNet.Numerics.LinearAlgebra.Storage/DenseColumnMajorMatrixStorage`1.htm">DenseColumnMajorMatrixStorage&lt;T&gt;</a> storage)</h4>
		<div class="content">Create a new dense matrix straight from an initialized matrix storage instance.
The storage is used directly without copying.
Intended for advanced scenarios where you're working directly with
storage for performance or interop reasons. 



      
    </div>
	</div>
	<div id="Dense``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>Dense&lt;T&gt;</strong>(<span title="System.int">int</span> rows, <span title="System.int">int</span> columns, <span title="MathNet.Numerics.LinearAlgebra.T[]">T[]</span> storage)</h4>
		<div class="content">Create a new dense matrix with the given number of rows and columns directly binding to a raw array.
The array is assumed to be in column-major order (column by column) and is used directly without copying.
Very efficient, but changes to the array and the matrix will affect each other. 



      
    </div>
	</div>
	<div id="Dense``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>Dense&lt;T&gt;</strong>(<span title="System.int">int</span> rows, <span title="System.int">int</span> columns, <span title="MathNet.Numerics.LinearAlgebra.T">T</span> value)</h4>
		<div class="content">Create a new dense matrix and initialize each value to the same provided value. 



      
    </div>
	</div>
	<div id="Dense``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>Dense&lt;T&gt;</strong>(<span title="System.int">int</span> rows, <span title="System.int">int</span> columns, <span title="System.Func<int, int, T>">Func&lt;int, int, T&gt;</span> init)</h4>
		<div class="content">Create a new dense matrix and initialize each value using the provided init function. 



      
    </div>
	</div>
	<div id="Dense``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>Dense&lt;T&gt;</strong>(<span title="System.int">int</span> rows, <span title="System.int">int</span> columns)</h4>
		<div class="content">Create a new dense matrix with the given number of rows and columns.
All cells of the matrix will be initialized to zero.
Zero-length matrices are not supported. 



      
    </div>
	</div>
	<div id="DenseDiagonal``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>DenseDiagonal&lt;T&gt;</strong>(<span title="System.int">int</span> rows, <span title="System.int">int</span> columns, <span title="MathNet.Numerics.LinearAlgebra.T">T</span> value)</h4>
		<div class="content">Create a new diagonal dense matrix and initialize each diagonal value to the same provided value. 



      
    </div>
	</div>
	<div id="DenseDiagonal``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>DenseDiagonal&lt;T&gt;</strong>(<span title="System.int">int</span> order, <span title="MathNet.Numerics.LinearAlgebra.T">T</span> value)</h4>
		<div class="content">Create a new diagonal dense matrix and initialize each diagonal value to the same provided value. 



      
    </div>
	</div>
	<div id="DenseDiagonal``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>DenseDiagonal&lt;T&gt;</strong>(<span title="System.int">int</span> rows, <span title="System.int">int</span> columns, <span title="System.Func<int, T>">Func&lt;int, T&gt;</span> init)</h4>
		<div class="content">Create a new diagonal dense matrix and initialize each diagonal value using the provided init function. 



      
    </div>
	</div>
	<div id="DenseIdentity``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>DenseIdentity&lt;T&gt;</strong>(<span title="System.int">int</span> order)</h4>
		<div class="content">Create a new diagonal dense identity matrix with a one-diagonal. 



      
    </div>
	</div>
	<div id="DenseIdentity``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>DenseIdentity&lt;T&gt;</strong>(<span title="System.int">int</span> rows, <span title="System.int">int</span> columns)</h4>
		<div class="content">Create a new diagonal dense identity matrix with a one-diagonal. 



      
    </div>
	</div>
	<div id="DenseOfArray``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>DenseOfArray&lt;T&gt;</strong>(<span title="MathNet.Numerics.LinearAlgebra.T[,]">T[,]</span> array)</h4>
		<div class="content">



      
    </div>
	</div>
	<div id="DenseOfColumnArrays``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>DenseOfColumnArrays&lt;T&gt;</strong>(<span title="MathNet.Numerics.LinearAlgebra.T[][]">T[][]</span> columns)</h4>
		<div class="content">



      
    </div>
	</div>
	<div id="DenseOfColumnArrays``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>DenseOfColumnArrays&lt;T&gt;</strong>(<span title="System.Collections.Generic.IEnumerable<T[]>">IEnumerable&lt;T[]&gt;</span> columns)</h4>
		<div class="content">Create a new dense matrix of T as a copy of the given column arrays.
This new matrix will be independent from the arrays.
A new memory block will be allocated for storing the matrix. 



      
    </div>
	</div>
	<div id="DenseOfColumnMajor``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>DenseOfColumnMajor&lt;T&gt;</strong>(<span title="System.int">int</span> rows, <span title="System.int">int</span> columns, <span title="System.Collections.Generic.IEnumerable<T>">IEnumerable&lt;T&gt;</span> columnMajor)</h4>
		<div class="content">Create a new dense matrix as a copy of the given enumerable.
The enumerable is assumed to be in column-major order (column by column).
This new matrix will be independent from the enumerable.
A new memory block will be allocated for storing the matrix. 



      
    </div>
	</div>
	<div id="DenseOfColumns``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>DenseOfColumns&lt;T&gt;</strong>(<span title="System.Collections.Generic.IEnumerable<IEnumerable<T>>">IEnumerable&lt;IEnumerable&lt;T&gt;&gt;</span> data)</h4>
		<div class="content">Create a new dense matrix as a copy of the given enumerable of enumerable columns.
Each enumerable in the master enumerable specifies a column.
This new matrix will be independent from the enumerables.
A new memory block will be allocated for storing the matrix. 



      
    </div>
	</div>
	<div id="DenseOfColumns``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>DenseOfColumns&lt;T&gt;</strong>(<span title="System.int">int</span> rows, <span title="System.int">int</span> columns, <span title="System.Collections.Generic.IEnumerable<IEnumerable<T>>">IEnumerable&lt;IEnumerable&lt;T&gt;&gt;</span> data)</h4>
		<div class="content">Create a new dense matrix as a copy of the given enumerable of enumerable columns.
Each enumerable in the master enumerable specifies a column.
This new matrix will be independent from the enumerables.
A new memory block will be allocated for storing the matrix. 



      
    </div>
	</div>
	<div id="DenseOfColumnVectors``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>DenseOfColumnVectors&lt;T&gt;</strong>(<span title="MathNet.Numerics.LinearAlgebra.Vector`1[]">Vector`1[]</span> columns)</h4>
		<div class="content">



      
    </div>
	</div>
	<div id="DenseOfColumnVectors``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>DenseOfColumnVectors&lt;T&gt;</strong>(<span title="System.Collections.Generic.IEnumerable<Vector<T>>">IEnumerable&lt;Vector&lt;T&gt;&gt;</span> columns)</h4>
		<div class="content">Create a new dense matrix as a copy of the given column vectors.
This new matrix will be independent from the vectors.
A new memory block will be allocated for storing the matrix. 



      
    </div>
	</div>
	<div id="DenseOfDiagonalArray``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>DenseOfDiagonalArray&lt;T&gt;</strong>(<span title="MathNet.Numerics.LinearAlgebra.T[]">T[]</span> diagonal)</h4>
		<div class="content">Create a new dense matrix with the diagonal as a copy of the given array.
This new matrix will be independent from the array.
A new memory block will be allocated for storing the matrix. 



      
    </div>
	</div>
	<div id="DenseOfDiagonalArray``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>DenseOfDiagonalArray&lt;T&gt;</strong>(<span title="System.int">int</span> rows, <span title="System.int">int</span> columns, <span title="MathNet.Numerics.LinearAlgebra.T[]">T[]</span> diagonal)</h4>
		<div class="content">Create a new dense matrix with the diagonal as a copy of the given array.
This new matrix will be independent from the array.
A new memory block will be allocated for storing the matrix. 



      
    </div>
	</div>
	<div id="DenseOfDiagonalVector``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>DenseOfDiagonalVector&lt;T&gt;</strong>(<a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a> diagonal)</h4>
		<div class="content">Create a new dense matrix with the diagonal as a copy of the given vector.
This new matrix will be independent from the vector.
A new memory block will be allocated for storing the matrix. 



      
    </div>
	</div>
	<div id="DenseOfDiagonalVector``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>DenseOfDiagonalVector&lt;T&gt;</strong>(<span title="System.int">int</span> rows, <span title="System.int">int</span> columns, <a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a> diagonal)</h4>
		<div class="content">Create a new dense matrix with the diagonal as a copy of the given vector.
This new matrix will be independent from the vector.
A new memory block will be allocated for storing the matrix. 



      
    </div>
	</div>
	<div id="DenseOfIndexed``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>DenseOfIndexed&lt;T&gt;</strong>(<span title="System.int">int</span> rows, <span title="System.int">int</span> columns, <span title="System.Collections.Generic.IEnumerable<Tuple<int, int, T>>">IEnumerable&lt;Tuple&lt;int, int, T&gt;&gt;</span> enumerable)</h4>
		<div class="content">Create a new dense matrix as a copy of the given indexed enumerable.
Keys must be provided at most once, zero is assumed if a key is omitted.
This new matrix will be independent from the enumerable.
A new memory block will be allocated for storing the matrix. 



      
    </div>
	</div>
	<div id="DenseOfMatrix``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>DenseOfMatrix&lt;T&gt;</strong>(<a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> matrix)</h4>
		<div class="content">Create a new dense matrix as a copy of the given other matrix.
This new matrix will be independent from the other matrix.
A new memory block will be allocated for storing the matrix. 



      
    </div>
	</div>
	<div id="DenseOfMatrixArray``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>DenseOfMatrixArray&lt;T&gt;</strong>(<span title="MathNet.Numerics.LinearAlgebra.Matrix`1[,]">Matrix`1[,]</span> matrices)</h4>
		<div class="content">



      
    </div>
	</div>
	<div id="DenseOfRowArrays``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>DenseOfRowArrays&lt;T&gt;</strong>(<span title="System.Collections.Generic.IEnumerable<T[]>">IEnumerable&lt;T[]&gt;</span> rows)</h4>
		<div class="content">Create a new dense matrix of T as a copy of the given row arrays.
This new matrix will be independent from the arrays.
A new memory block will be allocated for storing the matrix. 



      
    </div>
	</div>
	<div id="DenseOfRowArrays``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>DenseOfRowArrays&lt;T&gt;</strong>(<span title="MathNet.Numerics.LinearAlgebra.T[][]">T[][]</span> rows)</h4>
		<div class="content">



      
    </div>
	</div>
	<div id="DenseOfRows``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>DenseOfRows&lt;T&gt;</strong>(<span title="System.Collections.Generic.IEnumerable<IEnumerable<T>>">IEnumerable&lt;IEnumerable&lt;T&gt;&gt;</span> data)</h4>
		<div class="content">Create a new dense matrix as a copy of the given enumerable of enumerable rows.
Each enumerable in the master enumerable specifies a row.
This new matrix will be independent from the enumerables.
A new memory block will be allocated for storing the matrix. 



      
    </div>
	</div>
	<div id="DenseOfRows``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>DenseOfRows&lt;T&gt;</strong>(<span title="System.int">int</span> rows, <span title="System.int">int</span> columns, <span title="System.Collections.Generic.IEnumerable<IEnumerable<T>>">IEnumerable&lt;IEnumerable&lt;T&gt;&gt;</span> data)</h4>
		<div class="content">Create a new dense matrix as a copy of the given enumerable of enumerable rows.
Each enumerable in the master enumerable specifies a row.
This new matrix will be independent from the enumerables.
A new memory block will be allocated for storing the matrix. 



      
    </div>
	</div>
	<div id="DenseOfRowVectors``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>DenseOfRowVectors&lt;T&gt;</strong>(<span title="MathNet.Numerics.LinearAlgebra.Vector`1[]">Vector`1[]</span> rows)</h4>
		<div class="content">



      
    </div>
	</div>
	<div id="DenseOfRowVectors``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>DenseOfRowVectors&lt;T&gt;</strong>(<span title="System.Collections.Generic.IEnumerable<Vector<T>>">IEnumerable&lt;Vector&lt;T&gt;&gt;</span> rows)</h4>
		<div class="content">Create a new dense matrix as a copy of the given row vectors.
This new matrix will be independent from the vectors.
A new memory block will be allocated for storing the matrix. 



      
    </div>
	</div>
	<div id="Diagonal``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>Diagonal&lt;T&gt;</strong>(<span title="System.int">int</span> rows, <span title="System.int">int</span> columns, <span title="System.Func<int, T>">Func&lt;int, T&gt;</span> init)</h4>
		<div class="content">Create a new diagonal matrix and initialize each diagonal value using the provided init function. 



      
    </div>
	</div>
	<div id="Diagonal``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>Diagonal&lt;T&gt;</strong>(<a href="../MathNet.Numerics.LinearAlgebra.Storage/DiagonalMatrixStorage`1.htm">DiagonalMatrixStorage&lt;T&gt;</a> storage)</h4>
		<div class="content">Create a new diagonal matrix straight from an initialized matrix storage instance.
The storage is used directly without copying.
Intended for advanced scenarios where you're working directly with
storage for performance or interop reasons. 



      
    </div>
	</div>
	<div id="Diagonal``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>Diagonal&lt;T&gt;</strong>(<span title="System.int">int</span> rows, <span title="System.int">int</span> columns)</h4>
		<div class="content">Create a new diagonal matrix with the given number of rows and columns.
All cells of the matrix will be initialized to zero.
Zero-length matrices are not supported. 



      
    </div>
	</div>
	<div id="Diagonal``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>Diagonal&lt;T&gt;</strong>(<span title="System.int">int</span> rows, <span title="System.int">int</span> columns, <span title="MathNet.Numerics.LinearAlgebra.T[]">T[]</span> storage)</h4>
		<div class="content">Create a new diagonal matrix with the given number of rows and columns directly binding to a raw array.
The array is assumed to represent the diagonal values and is used directly without copying.
Very efficient, but changes to the array and the matrix will affect each other. 



      
    </div>
	</div>
	<div id="Diagonal``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>Diagonal&lt;T&gt;</strong>(<span title="MathNet.Numerics.LinearAlgebra.T[]">T[]</span> storage)</h4>
		<div class="content">Create a new square diagonal matrix directly binding to a raw array.
The array is assumed to represent the diagonal values and is used directly without copying.
Very efficient, but changes to the array and the matrix will affect each other. 



      
    </div>
	</div>
	<div id="Diagonal``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>Diagonal&lt;T&gt;</strong>(<span title="System.int">int</span> rows, <span title="System.int">int</span> columns, <span title="MathNet.Numerics.LinearAlgebra.T">T</span> value)</h4>
		<div class="content">Create a new diagonal matrix and initialize each diagonal value to the same provided value. 



      
    </div>
	</div>
	<div id="DiagonalIdentity``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>DiagonalIdentity&lt;T&gt;</strong>(<span title="System.int">int</span> rows, <span title="System.int">int</span> columns)</h4>
		<div class="content">Create a new diagonal identity matrix with a one-diagonal. 



      
    </div>
	</div>
	<div id="DiagonalIdentity``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>DiagonalIdentity&lt;T&gt;</strong>(<span title="System.int">int</span> order)</h4>
		<div class="content">Create a new diagonal identity matrix with a one-diagonal. 



      
    </div>
	</div>
	<div id="DiagonalOfDiagonalArray``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>DiagonalOfDiagonalArray&lt;T&gt;</strong>(<span title="MathNet.Numerics.LinearAlgebra.T[]">T[]</span> diagonal)</h4>
		<div class="content">Create a new diagonal matrix with the diagonal as a copy of the given array.
This new matrix will be independent from the array.
A new memory block will be allocated for storing the matrix. 



      
    </div>
	</div>
	<div id="DiagonalOfDiagonalArray``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>DiagonalOfDiagonalArray&lt;T&gt;</strong>(<span title="System.int">int</span> rows, <span title="System.int">int</span> columns, <span title="MathNet.Numerics.LinearAlgebra.T[]">T[]</span> diagonal)</h4>
		<div class="content">Create a new diagonal matrix with the diagonal as a copy of the given array.
This new matrix will be independent from the array.
A new memory block will be allocated for storing the matrix. 



      
    </div>
	</div>
	<div id="DiagonalOfDiagonalVector``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>DiagonalOfDiagonalVector&lt;T&gt;</strong>(<span title="System.int">int</span> rows, <span title="System.int">int</span> columns, <a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a> diagonal)</h4>
		<div class="content">Create a new diagonal matrix with the diagonal as a copy of the given vector.
This new matrix will be independent from the vector.
A new memory block will be allocated for storing the matrix. 



      
    </div>
	</div>
	<div id="DiagonalOfDiagonalVector``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>DiagonalOfDiagonalVector&lt;T&gt;</strong>(<a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a> diagonal)</h4>
		<div class="content">Create a new diagonal matrix with the diagonal as a copy of the given vector.
This new matrix will be independent from the vector.
A new memory block will be allocated for storing the matrix. 



      
    </div>
	</div>
	<div id="Random``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>Random&lt;T&gt;</strong>(<span title="System.int">int</span> rows, <span title="System.int">int</span> columns, <a href="../MathNet.Numerics.Distributions/IContinuousDistribution.htm">IContinuousDistribution</a> distribution)</h4>
		<div class="content">Create a new dense matrix with values sampled from the provided random distribution. 



      
    </div>
	</div>
	<div id="Random``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>Random&lt;T&gt;</strong>(<span title="System.int">int</span> rows, <span title="System.int">int</span> columns, <span title="System.int">int</span> seed)</h4>
		<div class="content">Create a new dense matrix with values sampled from the standard distribution with a system random source. 



      
    </div>
	</div>
	<div id="Random``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>Random&lt;T&gt;</strong>(<span title="System.int">int</span> rows, <span title="System.int">int</span> columns)</h4>
		<div class="content">Create a new dense matrix with values sampled from the standard distribution with a system random source. 



      
    </div>
	</div>
	<div id="RandomPositiveDefinite``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>RandomPositiveDefinite&lt;T&gt;</strong>(<span title="System.int">int</span> order, <span title="System.int">int</span> seed)</h4>
		<div class="content">Create a new positive definite dense matrix where each value is the product
of two samples from the provided random distribution. 



      
    </div>
	</div>
	<div id="RandomPositiveDefinite``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>RandomPositiveDefinite&lt;T&gt;</strong>(<span title="System.int">int</span> order)</h4>
		<div class="content">Create a new positive definite dense matrix where each value is the product
of two samples from the standard distribution. 



      
    </div>
	</div>
	<div id="RandomPositiveDefinite``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>RandomPositiveDefinite&lt;T&gt;</strong>(<span title="System.int">int</span> order, <a href="../MathNet.Numerics.Distributions/IContinuousDistribution.htm">IContinuousDistribution</a> distribution)</h4>
		<div class="content">Create a new positive definite dense matrix where each value is the product
of two samples from the provided random distribution. 



      
    </div>
	</div>
	<div id="SameAs``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>SameAs&lt;T&gt;</strong>(<a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> example, <a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> otherExample, <span title="System.int">int</span> rows, <span title="System.int">int</span> columns, <span title="System.bool">bool</span> fullyMutable)</h4>
		<div class="content">Create a new matrix with a type that can represent and is closest to both provided samples. 



      
    </div>
	</div>
	<div id="SameAs``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>SameAs&lt;T&gt;</strong>(<a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> example, <a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> otherExample)</h4>
		<div class="content">Create a new matrix with a type that can represent and is closest to both provided samples and the dimensions of example. 



      
    </div>
	</div>
	<div id="SameAs``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>SameAs&lt;T&gt;</strong>(<a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a> example, <span title="System.int">int</span> rows, <span title="System.int">int</span> columns)</h4>
		<div class="content">Create a new matrix with the same kind of the provided example. 



      
    </div>
	</div>
	<div id="SameAs``2" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>SameAs&lt;T, TU&gt;</strong>(<a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> example)</h4>
		<div class="content">Create a new matrix with the same kind and dimensions of the provided example. 



      
    </div>
	</div>
	<div id="SameAs``2" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>SameAs&lt;T, TU&gt;</strong>(<a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> example, <span title="System.int">int</span> rows, <span title="System.int">int</span> columns, <span title="System.bool">bool</span> fullyMutable)</h4>
		<div class="content">Create a new matrix with the same kind of the provided example. 



      
    </div>
	</div>
	<div id="Sparse``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>Sparse&lt;T&gt;</strong>(<a href="../MathNet.Numerics.LinearAlgebra.Storage/SparseCompressedRowMatrixStorage`1.htm">SparseCompressedRowMatrixStorage&lt;T&gt;</a> storage)</h4>
		<div class="content">Create a new sparse matrix straight from an initialized matrix storage instance.
The storage is used directly without copying.
Intended for advanced scenarios where you're working directly with
storage for performance or interop reasons. 



      
    </div>
	</div>
	<div id="Sparse``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>Sparse&lt;T&gt;</strong>(<span title="System.int">int</span> rows, <span title="System.int">int</span> columns)</h4>
		<div class="content">Create a sparse matrix of T with the given number of rows and columns. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.int">int</span></code> rows</h6>
          <p class="comments">The number of rows. </p>
          <h6><code><span title="System.int">int</span></code> columns</h6>
          <p class="comments">The number of columns. </p>
      </div>

      
    </div>
	</div>
	<div id="Sparse``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>Sparse&lt;T&gt;</strong>(<span title="System.int">int</span> rows, <span title="System.int">int</span> columns, <span title="MathNet.Numerics.LinearAlgebra.T">T</span> value)</h4>
		<div class="content">Create a new sparse matrix and initialize each value to the same provided value. 



      
    </div>
	</div>
	<div id="Sparse``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>Sparse&lt;T&gt;</strong>(<span title="System.int">int</span> rows, <span title="System.int">int</span> columns, <span title="System.Func<int, int, T>">Func&lt;int, int, T&gt;</span> init)</h4>
		<div class="content">Create a new sparse matrix and initialize each value using the provided init function. 



      
    </div>
	</div>
	<div id="SparseDiagonal``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>SparseDiagonal&lt;T&gt;</strong>(<span title="System.int">int</span> order, <span title="MathNet.Numerics.LinearAlgebra.T">T</span> value)</h4>
		<div class="content">Create a new diagonal sparse matrix and initialize each diagonal value to the same provided value. 



      
    </div>
	</div>
	<div id="SparseDiagonal``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>SparseDiagonal&lt;T&gt;</strong>(<span title="System.int">int</span> rows, <span title="System.int">int</span> columns, <span title="MathNet.Numerics.LinearAlgebra.T">T</span> value)</h4>
		<div class="content">Create a new diagonal sparse matrix and initialize each diagonal value to the same provided value. 



      
    </div>
	</div>
	<div id="SparseDiagonal``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>SparseDiagonal&lt;T&gt;</strong>(<span title="System.int">int</span> rows, <span title="System.int">int</span> columns, <span title="System.Func<int, T>">Func&lt;int, T&gt;</span> init)</h4>
		<div class="content">Create a new diagonal sparse matrix and initialize each diagonal value using the provided init function. 



      
    </div>
	</div>
	<div id="SparseIdentity``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>SparseIdentity&lt;T&gt;</strong>(<span title="System.int">int</span> order)</h4>
		<div class="content">Create a new diagonal dense identity matrix with a one-diagonal. 



      
    </div>
	</div>
	<div id="SparseIdentity``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>SparseIdentity&lt;T&gt;</strong>(<span title="System.int">int</span> rows, <span title="System.int">int</span> columns)</h4>
		<div class="content">Create a new diagonal dense identity matrix with a one-diagonal. 



      
    </div>
	</div>
	<div id="SparseOfArray``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>SparseOfArray&lt;T&gt;</strong>(<span title="MathNet.Numerics.LinearAlgebra.T[,]">T[,]</span> array)</h4>
		<div class="content">



      
    </div>
	</div>
	<div id="SparseOfColumnArrays``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>SparseOfColumnArrays&lt;T&gt;</strong>(<span title="System.Collections.Generic.IEnumerable<T[]>">IEnumerable&lt;T[]&gt;</span> columns)</h4>
		<div class="content">Create a new sparse matrix as a copy of the given column arrays.
This new matrix will be independent from the arrays.
A new memory block will be allocated for storing the matrix. 



      
    </div>
	</div>
	<div id="SparseOfColumnArrays``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>SparseOfColumnArrays&lt;T&gt;</strong>(<span title="MathNet.Numerics.LinearAlgebra.T[][]">T[][]</span> columns)</h4>
		<div class="content">



      
    </div>
	</div>
	<div id="SparseOfColumnMajor``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>SparseOfColumnMajor&lt;T&gt;</strong>(<span title="System.int">int</span> rows, <span title="System.int">int</span> columns, <span title="System.Collections.Generic.IList<T>">IList&lt;T&gt;</span> columnMajor)</h4>
		<div class="content">Create a new sparse matrix with the given number of rows and columns as a copy of the given array.
The array is assumed to be in column-major order (column by column).
This new matrix will be independent from the provided array.
A new memory block will be allocated for storing the matrix. 



      
    </div>
	</div>
	<div id="SparseOfColumns``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>SparseOfColumns&lt;T&gt;</strong>(<span title="System.int">int</span> rows, <span title="System.int">int</span> columns, <span title="System.Collections.Generic.IEnumerable<IEnumerable<T>>">IEnumerable&lt;IEnumerable&lt;T&gt;&gt;</span> data)</h4>
		<div class="content">Create a new sparse matrix as a copy of the given enumerable of enumerable columns.
Each enumerable in the master enumerable specifies a column.
This new matrix will be independent from the enumerables.
A new memory block will be allocated for storing the matrix. 



      
    </div>
	</div>
	<div id="SparseOfColumns``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>SparseOfColumns&lt;T&gt;</strong>(<span title="System.Collections.Generic.IEnumerable<IEnumerable<T>>">IEnumerable&lt;IEnumerable&lt;T&gt;&gt;</span> data)</h4>
		<div class="content">Create a new sparse matrix as a copy of the given enumerable of enumerable columns.
Each enumerable in the master enumerable specifies a column.
This new matrix will be independent from the enumerables.
A new memory block will be allocated for storing the matrix. 



      
    </div>
	</div>
	<div id="SparseOfColumnVectors``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>SparseOfColumnVectors&lt;T&gt;</strong>(<span title="System.Collections.Generic.IEnumerable<Vector<T>>">IEnumerable&lt;Vector&lt;T&gt;&gt;</span> columns)</h4>
		<div class="content">Create a new sparse matrix as a copy of the given column vectors.
This new matrix will be independent from the vectors.
A new memory block will be allocated for storing the matrix. 



      
    </div>
	</div>
	<div id="SparseOfColumnVectors``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>SparseOfColumnVectors&lt;T&gt;</strong>(<span title="MathNet.Numerics.LinearAlgebra.Vector`1[]">Vector`1[]</span> columns)</h4>
		<div class="content">



      
    </div>
	</div>
	<div id="SparseOfDiagonalArray``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>SparseOfDiagonalArray&lt;T&gt;</strong>(<span title="System.int">int</span> rows, <span title="System.int">int</span> columns, <span title="MathNet.Numerics.LinearAlgebra.T[]">T[]</span> diagonal)</h4>
		<div class="content">Create a new sparse matrix with the diagonal as a copy of the given array.
This new matrix will be independent from the array.
A new memory block will be allocated for storing the matrix. 



      
    </div>
	</div>
	<div id="SparseOfDiagonalArray``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>SparseOfDiagonalArray&lt;T&gt;</strong>(<span title="MathNet.Numerics.LinearAlgebra.T[]">T[]</span> diagonal)</h4>
		<div class="content">Create a new sparse matrix with the diagonal as a copy of the given array.
This new matrix will be independent from the array.
A new memory block will be allocated for storing the matrix. 



      
    </div>
	</div>
	<div id="SparseOfDiagonalVector``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>SparseOfDiagonalVector&lt;T&gt;</strong>(<span title="System.int">int</span> rows, <span title="System.int">int</span> columns, <a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a> diagonal)</h4>
		<div class="content">Create a new sparse matrix with the diagonal as a copy of the given vector.
This new matrix will be independent from the vector.
A new memory block will be allocated for storing the matrix. 



      
    </div>
	</div>
	<div id="SparseOfDiagonalVector``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>SparseOfDiagonalVector&lt;T&gt;</strong>(<a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a> diagonal)</h4>
		<div class="content">Create a new sparse matrix with the diagonal as a copy of the given vector.
This new matrix will be independent from the vector.
A new memory block will be allocated for storing the matrix. 



      
    </div>
	</div>
	<div id="SparseOfIndexed``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>SparseOfIndexed&lt;T&gt;</strong>(<span title="System.int">int</span> rows, <span title="System.int">int</span> columns, <span title="System.Collections.Generic.IEnumerable<Tuple<int, int, T>>">IEnumerable&lt;Tuple&lt;int, int, T&gt;&gt;</span> enumerable)</h4>
		<div class="content">Create a new sparse matrix as a copy of the given indexed enumerable.
Keys must be provided at most once, zero is assumed if a key is omitted.
This new matrix will be independent from the enumerable.
A new memory block will be allocated for storing the matrix. 



      
    </div>
	</div>
	<div id="SparseOfMatrix``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>SparseOfMatrix&lt;T&gt;</strong>(<a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> matrix)</h4>
		<div class="content">Create a new sparse matrix as a copy of the given other matrix.
This new matrix will be independent from the other matrix.
A new memory block will be allocated for storing the matrix. 



      
    </div>
	</div>
	<div id="SparseOfMatrixArray``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>SparseOfMatrixArray&lt;T&gt;</strong>(<span title="MathNet.Numerics.LinearAlgebra.Matrix`1[,]">Matrix`1[,]</span> matrices)</h4>
		<div class="content">



      
    </div>
	</div>
	<div id="SparseOfRowArrays``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>SparseOfRowArrays&lt;T&gt;</strong>(<span title="MathNet.Numerics.LinearAlgebra.T[][]">T[][]</span> rows)</h4>
		<div class="content">



      
    </div>
	</div>
	<div id="SparseOfRowArrays``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>SparseOfRowArrays&lt;T&gt;</strong>(<span title="System.Collections.Generic.IEnumerable<T[]>">IEnumerable&lt;T[]&gt;</span> rows)</h4>
		<div class="content">Create a new sparse matrix as a copy of the given row arrays.
This new matrix will be independent from the arrays.
A new memory block will be allocated for storing the matrix. 



      
    </div>
	</div>
	<div id="SparseOfRowMajor``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>SparseOfRowMajor&lt;T&gt;</strong>(<span title="System.int">int</span> rows, <span title="System.int">int</span> columns, <span title="System.Collections.Generic.IEnumerable<T>">IEnumerable&lt;T&gt;</span> rowMajor)</h4>
		<div class="content">Create a new sparse matrix as a copy of the given enumerable.
The enumerable is assumed to be in row-major order (row by row).
This new matrix will be independent from the enumerable.
A new memory block will be allocated for storing the vector. 



      
    </div>
	</div>
	<div id="SparseOfRows``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>SparseOfRows&lt;T&gt;</strong>(<span title="System.Collections.Generic.IEnumerable<IEnumerable<T>>">IEnumerable&lt;IEnumerable&lt;T&gt;&gt;</span> data)</h4>
		<div class="content">Create a new sparse matrix as a copy of the given enumerable of enumerable rows.
Each enumerable in the master enumerable specifies a row.
This new matrix will be independent from the enumerables.
A new memory block will be allocated for storing the matrix. 



      
    </div>
	</div>
	<div id="SparseOfRows``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>SparseOfRows&lt;T&gt;</strong>(<span title="System.int">int</span> rows, <span title="System.int">int</span> columns, <span title="System.Collections.Generic.IEnumerable<IEnumerable<T>>">IEnumerable&lt;IEnumerable&lt;T&gt;&gt;</span> data)</h4>
		<div class="content">Create a new sparse matrix as a copy of the given enumerable of enumerable rows.
Each enumerable in the master enumerable specifies a row.
This new matrix will be independent from the enumerables.
A new memory block will be allocated for storing the matrix. 



      
    </div>
	</div>
	<div id="SparseOfRowVectors``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>SparseOfRowVectors&lt;T&gt;</strong>(<span title="System.Collections.Generic.IEnumerable<Vector<T>>">IEnumerable&lt;Vector&lt;T&gt;&gt;</span> rows)</h4>
		<div class="content">Create a new sparse matrix as a copy of the given row vectors.
This new matrix will be independent from the vectors.
A new memory block will be allocated for storing the matrix. 



      
    </div>
	</div>
	<div id="SparseOfRowVectors``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>SparseOfRowVectors&lt;T&gt;</strong>(<span title="MathNet.Numerics.LinearAlgebra.Vector`1[]">Vector`1[]</span> rows)</h4>
		<div class="content">



      
    </div>
	</div>
	<div id="WithStorage``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> <strong>WithStorage&lt;T&gt;</strong>(<a href="../MathNet.Numerics.LinearAlgebra.Storage/MatrixStorage`1.htm">MatrixStorage&lt;T&gt;</a> storage)</h4>
		<div class="content">Create a new matrix straight from an initialized matrix storage instance.
If you have an instance of a discrete storage type instead, use their direct methods instead. 



      
    </div>
	</div>

	
	<div id="footer">
  <p>Based on v4.13.0.0 of MathNet.Numerics (Math.NET Numerics)</p>
  <p>Generated by <a href="http://docu.jagregory.com">docu</a></p>
</div>
  </body>
</html>