<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <title>CreateVector - Math.NET Numerics Documentation</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <link type="text/css" rel="stylesheet" href="../main.css"/>
    <script type="text/javascript" src="../js/jquery-1.3.2.min.js"></script>
    <script type="text/javascript" src="../js/jquery.scrollTo-min.js"></script>
    <script type="text/javascript" src="../js/navigation.js"></script>
    <script type="text/javascript" src="../js/example.js"></script>
  </head>
  <body><div id="namespaces">
	<h2 class="fixed">Namespaces</h2>
	<div class="scroll">
		<ul>
			<li>
          <a href="../MathNet.Numerics/index.htm">MathNet.Numerics</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Differentiation/index.htm">MathNet.Numerics.Differentiation</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Distributions/index.htm">MathNet.Numerics.Distributions</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Financial/index.htm">MathNet.Numerics.Financial</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.IntegralTransforms/index.htm">MathNet.Numerics.IntegralTransforms</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Integration/index.htm">MathNet.Numerics.Integration</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Interpolation/index.htm">MathNet.Numerics.Interpolation</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra/index.htm" class="current">MathNet.Numerics.LinearAlgebra</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Complex/index.htm">MathNet.Numerics.LinearAlgebra.Complex</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Complex.Solvers/index.htm">MathNet.Numerics.LinearAlgebra.Complex.Solvers</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Complex32/index.htm">MathNet.Numerics.LinearAlgebra.Complex32</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Complex32.Solvers/index.htm">MathNet.Numerics.LinearAlgebra.Complex32.Solvers</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Double/index.htm">MathNet.Numerics.LinearAlgebra.Double</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Double.Solvers/index.htm">MathNet.Numerics.LinearAlgebra.Double.Solvers</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Factorization/index.htm">MathNet.Numerics.LinearAlgebra.Factorization</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Single/index.htm">MathNet.Numerics.LinearAlgebra.Single</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Single.Solvers/index.htm">MathNet.Numerics.LinearAlgebra.Single.Solvers</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Solvers/index.htm">MathNet.Numerics.LinearAlgebra.Solvers</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Storage/index.htm">MathNet.Numerics.LinearAlgebra.Storage</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearRegression/index.htm">MathNet.Numerics.LinearRegression</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.OdeSolvers/index.htm">MathNet.Numerics.OdeSolvers</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Optimization/index.htm">MathNet.Numerics.Optimization</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Optimization.LineSearch/index.htm">MathNet.Numerics.Optimization.LineSearch</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Optimization.ObjectiveFunctions/index.htm">MathNet.Numerics.Optimization.ObjectiveFunctions</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Optimization.TrustRegion/index.htm">MathNet.Numerics.Optimization.TrustRegion</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Providers/index.htm">MathNet.Numerics.Providers</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Providers.FourierTransform/index.htm">MathNet.Numerics.Providers.FourierTransform</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Providers.LinearAlgebra/index.htm">MathNet.Numerics.Providers.LinearAlgebra</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Providers.SparseSolver/index.htm">MathNet.Numerics.Providers.SparseSolver</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Random/index.htm">MathNet.Numerics.Random</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.RootFinding/index.htm">MathNet.Numerics.RootFinding</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Statistics/index.htm">MathNet.Numerics.Statistics</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Statistics.Mcmc/index.htm">MathNet.Numerics.Statistics.Mcmc</a>
      </li>
		</ul>
	</div>
</div><div id="types">
  <h2 class="fixed">Types in MathNet.Numerics.LinearAlgebra</h2>
	<div class="scroll">
		<ul>
				<li>
            <a href="../MathNet.Numerics.LinearAlgebra/CreateMatrix.htm">CreateMatrix</a>
        </li>
				<li>
            <a href="../MathNet.Numerics.LinearAlgebra/CreateVector.htm" class="current">CreateVector</a>
        </li>
				<li>
            <a href="../MathNet.Numerics.LinearAlgebra/ExistingData.htm">ExistingData</a>
        </li>
				<li>
            <a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a>
        </li>
				<li>
            <a href="../MathNet.Numerics.LinearAlgebra/MatrixBuilder`1.htm">MatrixBuilder&lt;T&gt;</a>
        </li>
				<li>
            <a href="../MathNet.Numerics.LinearAlgebra/MatrixExtensions.htm">MatrixExtensions</a>
        </li>
				<li>
            <a href="../MathNet.Numerics.LinearAlgebra/Symmetricity.htm">Symmetricity</a>
        </li>
				<li>
            <a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a>
        </li>
				<li>
            <a href="../MathNet.Numerics.LinearAlgebra/VectorBuilder`1.htm">VectorBuilder&lt;T&gt;</a>
        </li>
				<li>
            <a href="../MathNet.Numerics.LinearAlgebra/VectorExtensions.htm">VectorExtensions</a>
        </li>
				<li>
            <a href="../MathNet.Numerics.LinearAlgebra/Zeros.htm">Zeros</a>
        </li>
		</ul>
	</div>
</div>
    <div class="header">
		<p class="class"><strong>Type</strong> CreateVector</p>
		<p><strong>Namespace</strong> MathNet.Numerics.LinearAlgebra</p>
	</div>
    <div class="sub-header">
		

			<h3 class="section">Static Functions</h3>
			<ul>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateVector.htm#Dense``1">Dense&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateVector.htm#Dense``1">Dense&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateVector.htm#Dense``1">Dense&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateVector.htm#Dense``1">Dense&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateVector.htm#Dense``1">Dense&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateVector.htm#DenseOfArray``1">DenseOfArray&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateVector.htm#DenseOfEnumerable``1">DenseOfEnumerable&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateVector.htm#DenseOfIndexed``1">DenseOfIndexed&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateVector.htm#DenseOfVector``1">DenseOfVector&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateVector.htm#Random``1">Random&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateVector.htm#Random``1">Random&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateVector.htm#Random``1">Random&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateVector.htm#SameAs``1">SameAs&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateVector.htm#SameAs``1">SameAs&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateVector.htm#SameAs``1">SameAs&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateVector.htm#SameAs``2">SameAs&lt;T, TU&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateVector.htm#SameAs``2">SameAs&lt;T, TU&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateVector.htm#SameAs``2">SameAs&lt;T, TU&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateVector.htm#Sparse``1">Sparse&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateVector.htm#Sparse``1">Sparse&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateVector.htm#Sparse``1">Sparse&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateVector.htm#Sparse``1">Sparse&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateVector.htm#SparseOfArray``1">SparseOfArray&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateVector.htm#SparseOfEnumerable``1">SparseOfEnumerable&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateVector.htm#SparseOfIndexed``1">SparseOfIndexed&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateVector.htm#SparseOfVector``1">SparseOfVector&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics.LinearAlgebra/CreateVector.htm#WithStorage``1">WithStorage&lt;T&gt;</a></li>
			</ul>
		

		
	</div>
	
	
	
	<h3 class="section">Public Static Functions</h3>
	
	<div id="Dense``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a> <strong>Dense&lt;T&gt;</strong>(<span title="System.int">int</span> length, <span title="System.Func<int, T>">Func&lt;int, T&gt;</span> init)</h4>
		<div class="content">Create a new dense vector and initialize each value using the provided init function. 



      
    </div>
	</div>
	<div id="Dense``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a> <strong>Dense&lt;T&gt;</strong>(<span title="System.int">int</span> length, <span title="MathNet.Numerics.LinearAlgebra.T">T</span> value)</h4>
		<div class="content">Create a new dense vector and initialize each value using the provided value. 



      
    </div>
	</div>
	<div id="Dense``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a> <strong>Dense&lt;T&gt;</strong>(<span title="MathNet.Numerics.LinearAlgebra.T[]">T[]</span> array)</h4>
		<div class="content">Create a dense vector of T that is directly bound to the specified array. 



      
    </div>
	</div>
	<div id="Dense``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a> <strong>Dense&lt;T&gt;</strong>(<span title="System.int">int</span> size)</h4>
		<div class="content">Create a dense vector of T with the given size. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.int">int</span></code> size</h6>
          <p class="comments">The size of the vector. </p>
      </div>

      
    </div>
	</div>
	<div id="Dense``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a> <strong>Dense&lt;T&gt;</strong>(<a href="../MathNet.Numerics.LinearAlgebra.Storage/DenseVectorStorage`1.htm">DenseVectorStorage&lt;T&gt;</a> storage)</h4>
		<div class="content">Create a new dense vector straight from an initialized vector storage instance.
The storage is used directly without copying.
Intended for advanced scenarios where you're working directly with
storage for performance or interop reasons. 



      
    </div>
	</div>
	<div id="DenseOfArray``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a> <strong>DenseOfArray&lt;T&gt;</strong>(<span title="MathNet.Numerics.LinearAlgebra.T[]">T[]</span> array)</h4>
		<div class="content">Create a new dense vector as a copy of the given array.
This new vector will be independent from the array.
A new memory block will be allocated for storing the vector. 



      
    </div>
	</div>
	<div id="DenseOfEnumerable``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a> <strong>DenseOfEnumerable&lt;T&gt;</strong>(<span title="System.Collections.Generic.IEnumerable<T>">IEnumerable&lt;T&gt;</span> enumerable)</h4>
		<div class="content">Create a new dense vector as a copy of the given enumerable.
This new vector will be independent from the enumerable.
A new memory block will be allocated for storing the vector. 



      
    </div>
	</div>
	<div id="DenseOfIndexed``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a> <strong>DenseOfIndexed&lt;T&gt;</strong>(<span title="System.int">int</span> length, <span title="System.Collections.Generic.IEnumerable<Tuple<int, T>>">IEnumerable&lt;Tuple&lt;int, T&gt;&gt;</span> enumerable)</h4>
		<div class="content">Create a new dense vector as a copy of the given indexed enumerable.
Keys must be provided at most once, zero is assumed if a key is omitted.
This new vector will be independent from the enumerable.
A new memory block will be allocated for storing the vector. 



      
    </div>
	</div>
	<div id="DenseOfVector``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a> <strong>DenseOfVector&lt;T&gt;</strong>(<a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a> vector)</h4>
		<div class="content">Create a new dense vector as a copy of the given other vector.
This new vector will be independent from the other vector.
A new memory block will be allocated for storing the vector. 



      
    </div>
	</div>
	<div id="Random``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a> <strong>Random&lt;T&gt;</strong>(<span title="System.int">int</span> length)</h4>
		<div class="content">Create a new dense vector with values sampled from the standard distribution with a system random source. 



      
    </div>
	</div>
	<div id="Random``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a> <strong>Random&lt;T&gt;</strong>(<span title="System.int">int</span> length, <span title="System.int">int</span> seed)</h4>
		<div class="content">Create a new dense vector with values sampled from the standard distribution with a system random source. 



      
    </div>
	</div>
	<div id="Random``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a> <strong>Random&lt;T&gt;</strong>(<span title="System.int">int</span> length, <a href="../MathNet.Numerics.Distributions/IContinuousDistribution.htm">IContinuousDistribution</a> distribution)</h4>
		<div class="content">Create a new dense vector with values sampled from the provided random distribution. 



      
    </div>
	</div>
	<div id="SameAs``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a> <strong>SameAs&lt;T&gt;</strong>(<a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a> example, <a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a> otherExample)</h4>
		<div class="content">Create a new vector with a type that can represent and is closest to both provided samples and the dimensions of example. 



      
    </div>
	</div>
	<div id="SameAs``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a> <strong>SameAs&lt;T&gt;</strong>(<a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> matrix, <a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a> vector, <span title="System.int">int</span> length)</h4>
		<div class="content">Create a new vector with a type that can represent and is closest to both provided samples. 



      
    </div>
	</div>
	<div id="SameAs``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a> <strong>SameAs&lt;T&gt;</strong>(<a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a> example, <a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a> otherExample, <span title="System.int">int</span> length)</h4>
		<div class="content">Create a new vector with a type that can represent and is closest to both provided samples. 



      
    </div>
	</div>
	<div id="SameAs``2" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a> <strong>SameAs&lt;T, TU&gt;</strong>(<a href="../MathNet.Numerics.LinearAlgebra/Matrix`1.htm">Matrix&lt;T&gt;</a> example, <span title="System.int">int</span> length)</h4>
		<div class="content">Create a new vector with the same kind of the provided example. 



      
    </div>
	</div>
	<div id="SameAs``2" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a> <strong>SameAs&lt;T, TU&gt;</strong>(<a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a> example)</h4>
		<div class="content">Create a new vector with the same kind and dimension of the provided example. 



      
    </div>
	</div>
	<div id="SameAs``2" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a> <strong>SameAs&lt;T, TU&gt;</strong>(<a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a> example, <span title="System.int">int</span> length)</h4>
		<div class="content">Create a new vector with the same kind of the provided example. 



      
    </div>
	</div>
	<div id="Sparse``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a> <strong>Sparse&lt;T&gt;</strong>(<a href="../MathNet.Numerics.LinearAlgebra.Storage/SparseVectorStorage`1.htm">SparseVectorStorage&lt;T&gt;</a> storage)</h4>
		<div class="content">Create a new sparse vector straight from an initialized vector storage instance.
The storage is used directly without copying.
Intended for advanced scenarios where you're working directly with
storage for performance or interop reasons. 



      
    </div>
	</div>
	<div id="Sparse``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a> <strong>Sparse&lt;T&gt;</strong>(<span title="System.int">int</span> size)</h4>
		<div class="content">Create a sparse vector of T with the given size. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.int">int</span></code> size</h6>
          <p class="comments">The size of the vector. </p>
      </div>

      
    </div>
	</div>
	<div id="Sparse``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a> <strong>Sparse&lt;T&gt;</strong>(<span title="System.int">int</span> length, <span title="MathNet.Numerics.LinearAlgebra.T">T</span> value)</h4>
		<div class="content">Create a new sparse vector and initialize each value using the provided value. 



      
    </div>
	</div>
	<div id="Sparse``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a> <strong>Sparse&lt;T&gt;</strong>(<span title="System.int">int</span> length, <span title="System.Func<int, T>">Func&lt;int, T&gt;</span> init)</h4>
		<div class="content">Create a new sparse vector and initialize each value using the provided init function. 



      
    </div>
	</div>
	<div id="SparseOfArray``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a> <strong>SparseOfArray&lt;T&gt;</strong>(<span title="MathNet.Numerics.LinearAlgebra.T[]">T[]</span> array)</h4>
		<div class="content">Create a new sparse vector as a copy of the given array.
This new vector will be independent from the array.
A new memory block will be allocated for storing the vector. 



      
    </div>
	</div>
	<div id="SparseOfEnumerable``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a> <strong>SparseOfEnumerable&lt;T&gt;</strong>(<span title="System.Collections.Generic.IEnumerable<T>">IEnumerable&lt;T&gt;</span> enumerable)</h4>
		<div class="content">Create a new sparse vector as a copy of the given enumerable.
This new vector will be independent from the enumerable.
A new memory block will be allocated for storing the vector. 



      
    </div>
	</div>
	<div id="SparseOfIndexed``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a> <strong>SparseOfIndexed&lt;T&gt;</strong>(<span title="System.int">int</span> length, <span title="System.Collections.Generic.IEnumerable<Tuple<int, T>>">IEnumerable&lt;Tuple&lt;int, T&gt;&gt;</span> enumerable)</h4>
		<div class="content">Create a new sparse vector as a copy of the given indexed enumerable.
Keys must be provided at most once, zero is assumed if a key is omitted.
This new vector will be independent from the enumerable.
A new memory block will be allocated for storing the vector. 



      
    </div>
	</div>
	<div id="SparseOfVector``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a> <strong>SparseOfVector&lt;T&gt;</strong>(<a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a> vector)</h4>
		<div class="content">Create a new sparse vector as a copy of the given other vector.
This new vector will be independent from the other vector.
A new memory block will be allocated for storing the vector. 



      
    </div>
	</div>
	<div id="WithStorage``1" class="method">
		<h4><a href="../MathNet.Numerics.LinearAlgebra/Vector`1.htm">Vector&lt;T&gt;</a> <strong>WithStorage&lt;T&gt;</strong>(<a href="../MathNet.Numerics.LinearAlgebra.Storage/VectorStorage`1.htm">VectorStorage&lt;T&gt;</a> storage)</h4>
		<div class="content">Create a new vector straight from an initialized matrix storage instance.
If you have an instance of a discrete storage type instead, use their direct methods instead. 



      
    </div>
	</div>

	
	<div id="footer">
  <p>Based on v5.0.0.0 of MathNet.Numerics (Math.NET Numerics)</p>
  <p>Generated by <a href="http://docu.jagregory.com">docu</a></p>
</div>
  </body>
</html>