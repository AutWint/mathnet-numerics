<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <title>SpecialFunctions - Math.NET Numerics Documentation</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <link type="text/css" rel="stylesheet" href="../main.css"/>
    <script type="text/javascript" src="../js/jquery-1.3.2.min.js"></script>
    <script type="text/javascript" src="../js/jquery.scrollTo-min.js"></script>
    <script type="text/javascript" src="../js/navigation.js"></script>
    <script type="text/javascript" src="../js/example.js"></script>
  </head>
  <body><div id="namespaces">
	<h2 class="fixed">Namespaces</h2>
	<div class="scroll">
		<ul>
			<li>
          <a href="../MathNet.Numerics/index.htm" class="current">MathNet.Numerics</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Differentiation/index.htm">MathNet.Numerics.Differentiation</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Distributions/index.htm">MathNet.Numerics.Distributions</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Financial/index.htm">MathNet.Numerics.Financial</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.IntegralTransforms/index.htm">MathNet.Numerics.IntegralTransforms</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Integration/index.htm">MathNet.Numerics.Integration</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Interpolation/index.htm">MathNet.Numerics.Interpolation</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra/index.htm">MathNet.Numerics.LinearAlgebra</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Complex/index.htm">MathNet.Numerics.LinearAlgebra.Complex</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Complex.Solvers/index.htm">MathNet.Numerics.LinearAlgebra.Complex.Solvers</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Complex32/index.htm">MathNet.Numerics.LinearAlgebra.Complex32</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Complex32.Solvers/index.htm">MathNet.Numerics.LinearAlgebra.Complex32.Solvers</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Double/index.htm">MathNet.Numerics.LinearAlgebra.Double</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Double.Solvers/index.htm">MathNet.Numerics.LinearAlgebra.Double.Solvers</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Factorization/index.htm">MathNet.Numerics.LinearAlgebra.Factorization</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Single/index.htm">MathNet.Numerics.LinearAlgebra.Single</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Single.Solvers/index.htm">MathNet.Numerics.LinearAlgebra.Single.Solvers</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Solvers/index.htm">MathNet.Numerics.LinearAlgebra.Solvers</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Storage/index.htm">MathNet.Numerics.LinearAlgebra.Storage</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearRegression/index.htm">MathNet.Numerics.LinearRegression</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.OdeSolvers/index.htm">MathNet.Numerics.OdeSolvers</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Optimization/index.htm">MathNet.Numerics.Optimization</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Optimization.LineSearch/index.htm">MathNet.Numerics.Optimization.LineSearch</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Optimization.ObjectiveFunctions/index.htm">MathNet.Numerics.Optimization.ObjectiveFunctions</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Optimization.TrustRegion/index.htm">MathNet.Numerics.Optimization.TrustRegion</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Providers/index.htm">MathNet.Numerics.Providers</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Providers.FourierTransform/index.htm">MathNet.Numerics.Providers.FourierTransform</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Providers.LinearAlgebra/index.htm">MathNet.Numerics.Providers.LinearAlgebra</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Providers.SparseSolver/index.htm">MathNet.Numerics.Providers.SparseSolver</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Random/index.htm">MathNet.Numerics.Random</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.RootFinding/index.htm">MathNet.Numerics.RootFinding</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Statistics/index.htm">MathNet.Numerics.Statistics</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Statistics.Mcmc/index.htm">MathNet.Numerics.Statistics.Mcmc</a>
      </li>
		</ul>
	</div>
</div><div id="types">
  <h2 class="fixed">Types in MathNet.Numerics</h2>
	<div class="scroll">
		<ul>
				<li>
            <a href="../MathNet.Numerics/AppSwitches.htm">AppSwitches</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/Combinatorics.htm">Combinatorics</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/Complex32.htm">Complex32</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/ComplexExtensions.htm">ComplexExtensions</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/Constants.htm">Constants</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/ContourIntegrate.htm">ContourIntegrate</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/Control.htm">Control</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/Differentiate.htm">Differentiate</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/DifferIntegrate.htm">DifferIntegrate</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/Distance.htm">Distance</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/Euclid.htm">Euclid</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/ExcelFunctions.htm">ExcelFunctions</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/FindMinimum.htm">FindMinimum</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/FindRoots.htm">FindRoots</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/Fit.htm">Fit</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/Generate.htm">Generate</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/GoodnessOfFit.htm">GoodnessOfFit</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/Integrate.htm">Integrate</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/Interpolate.htm">Interpolate</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/InvalidParameterException.htm">InvalidParameterException</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/IPrecisionSupport`1.htm">IPrecisionSupport&lt;T&gt;</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/MemoryAllocationException.htm">MemoryAllocationException</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/NativeInterfaceException.htm">NativeInterfaceException</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/NonConvergenceException.htm">NonConvergenceException</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/NumericalBreakdownException.htm">NumericalBreakdownException</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/Permutation.htm">Permutation</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/Polynomial.htm">Polynomial</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/Precision.htm">Precision</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/Series.htm">Series</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/SingularUMatrixException.htm">SingularUMatrixException</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/Sorting.htm">Sorting</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/SpecialFunctions.htm" class="current">SpecialFunctions</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/TestFunctions.htm">TestFunctions</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/Trig.htm">Trig</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/Window.htm">Window</a>
        </li>
		</ul>
	</div>
</div>
    <div class="header">
		<p class="class"><strong>Type</strong> SpecialFunctions</p>
		<p><strong>Namespace</strong> MathNet.Numerics</p>
	</div>
    <div class="sub-header">
			<div id="summary">This partial implementation of the SpecialFunctions class contains all methods related to the Airy functions. 
			</div>
		

			<h3 class="section">Static Functions</h3>
			<ul>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#AiryAi">AiryAi</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#AiryAi">AiryAi</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#AiryAiPrime">AiryAiPrime</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#AiryAiPrime">AiryAiPrime</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#AiryAiPrimeScaled">AiryAiPrimeScaled</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#AiryAiPrimeScaled">AiryAiPrimeScaled</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#AiryAiScaled">AiryAiScaled</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#AiryAiScaled">AiryAiScaled</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#AiryBi">AiryBi</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#AiryBi">AiryBi</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#AiryBiPrime">AiryBiPrime</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#AiryBiPrime">AiryBiPrime</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#AiryBiPrimeScaled">AiryBiPrimeScaled</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#AiryBiPrimeScaled">AiryBiPrimeScaled</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#AiryBiScaled">AiryBiScaled</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#AiryBiScaled">AiryBiScaled</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#BesselI">BesselI</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#BesselI">BesselI</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#BesselI0">BesselI0</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#BesselI0MStruveL0">BesselI0MStruveL0</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#BesselI1">BesselI1</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#BesselI1MStruveL1">BesselI1MStruveL1</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#BesselIScaled">BesselIScaled</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#BesselIScaled">BesselIScaled</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#BesselJ">BesselJ</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#BesselJ">BesselJ</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#BesselJScaled">BesselJScaled</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#BesselJScaled">BesselJScaled</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#BesselK">BesselK</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#BesselK">BesselK</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#BesselK0">BesselK0</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#BesselK0e">BesselK0e</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#BesselK1">BesselK1</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#BesselK1e">BesselK1e</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#BesselKScaled">BesselKScaled</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#BesselKScaled">BesselKScaled</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#BesselY">BesselY</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#BesselY">BesselY</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#BesselYScaled">BesselYScaled</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#BesselYScaled">BesselYScaled</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#Beta">Beta</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#BetaIncomplete">BetaIncomplete</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#BetaLn">BetaLn</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#BetaRegularized">BetaRegularized</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#Binomial">Binomial</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#BinomialLn">BinomialLn</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#DiGamma">DiGamma</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#DiGammaInv">DiGammaInv</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#Erf">Erf</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#Erfc">Erfc</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#ErfcInv">ErfcInv</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#ErfInv">ErfInv</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#ExponentialIntegral">ExponentialIntegral</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#ExponentialMinusOne">ExponentialMinusOne</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#Factorial">Factorial</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#Factorial">Factorial</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#FactorialLn">FactorialLn</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#FallingFactorial">FallingFactorial</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#Gamma">Gamma</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#GammaLn">GammaLn</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#GammaLowerIncomplete">GammaLowerIncomplete</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#GammaLowerRegularized">GammaLowerRegularized</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#GammaLowerRegularizedInv">GammaLowerRegularizedInv</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#GammaUpperIncomplete">GammaUpperIncomplete</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#GammaUpperRegularized">GammaUpperRegularized</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#GeneralHarmonic">GeneralHarmonic</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#GeneralizedHypergeometric">GeneralizedHypergeometric</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#HankelH1">HankelH1</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#HankelH1Scaled">HankelH1Scaled</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#HankelH2">HankelH2</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#HankelH2Scaled">HankelH2Scaled</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#Harmonic">Harmonic</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#Hypotenuse">Hypotenuse</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#Hypotenuse">Hypotenuse</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#Hypotenuse">Hypotenuse</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#Hypotenuse">Hypotenuse</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#KelvinBe">KelvinBe</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#KelvinBei">KelvinBei</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#KelvinBei">KelvinBei</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#KelvinBeiPrime">KelvinBeiPrime</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#KelvinBeiPrime">KelvinBeiPrime</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#KelvinBer">KelvinBer</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#KelvinBer">KelvinBer</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#KelvinBerPrime">KelvinBerPrime</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#KelvinBerPrime">KelvinBerPrime</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#KelvinKe">KelvinKe</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#KelvinKei">KelvinKei</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#KelvinKei">KelvinKei</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#KelvinKeiPrime">KelvinKeiPrime</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#KelvinKeiPrime">KelvinKeiPrime</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#KelvinKer">KelvinKer</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#KelvinKer">KelvinKer</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#KelvinKerPrime">KelvinKerPrime</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#KelvinKerPrime">KelvinKerPrime</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#Logistic">Logistic</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#Logit">Logit</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#Multinomial">Multinomial</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#RisingFactorial">RisingFactorial</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#SphericalBesselJ">SphericalBesselJ</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#SphericalBesselJ">SphericalBesselJ</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#SphericalBesselY">SphericalBesselY</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#SphericalBesselY">SphericalBesselY</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#StruveL0">StruveL0</a></li>
				<li><a href="../MathNet.Numerics/SpecialFunctions.htm#StruveL1">StruveL1</a></li>
			</ul>
		

		
	</div>
	
	
	
	<h3 class="section">Public Static Functions</h3>
	
	<div id="AiryAi" class="method">
		<h4><span title="System.Numerics.Complex">Complex</span> <strong>AiryAi</strong>(<span title="System.Numerics.Complex">Complex</span> z)</h4>
		<div class="content">Returns the Airy function Ai. <p>AiryAi(z) is a solution to the Airy equation, y'' - y * z = 0. </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.Numerics.Complex">Complex</span></code> z</h6>
          <p class="comments">The value to compute the Airy function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.Numerics.Complex">Complex</span></code></h6>
        <p>The Airy function Ai. </p>
      </div>
      
    </div>
	</div>
	<div id="AiryAi" class="method">
		<h4><span title="System.double">double</span> <strong>AiryAi</strong>(<span title="System.double">double</span> z)</h4>
		<div class="content">Returns the Airy function Ai. <p>AiryAi(z) is a solution to the Airy equation, y'' - y * z = 0. </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> z</h6>
          <p class="comments">The value to compute the Airy function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The Airy function Ai. </p>
      </div>
      
    </div>
	</div>
	<div id="AiryAiPrime" class="method">
		<h4><span title="System.Numerics.Complex">Complex</span> <strong>AiryAiPrime</strong>(<span title="System.Numerics.Complex">Complex</span> z)</h4>
		<div class="content">Returns the derivative of the Airy function Ai. <p>AiryAiPrime(z) is defined as d/dz AiryAi(z). </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.Numerics.Complex">Complex</span></code> z</h6>
          <p class="comments">The value to compute the derivative of the Airy function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.Numerics.Complex">Complex</span></code></h6>
        <p>The derivative of the Airy function Ai. </p>
      </div>
      
    </div>
	</div>
	<div id="AiryAiPrime" class="method">
		<h4><span title="System.double">double</span> <strong>AiryAiPrime</strong>(<span title="System.double">double</span> z)</h4>
		<div class="content">Returns the derivative of the Airy function Ai. <p>AiryAiPrime(z) is defined as d/dz AiryAi(z). </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> z</h6>
          <p class="comments">The value to compute the derivative of the Airy function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The derivative of the Airy function Ai. </p>
      </div>
      
    </div>
	</div>
	<div id="AiryAiPrimeScaled" class="method">
		<h4><span title="System.Numerics.Complex">Complex</span> <strong>AiryAiPrimeScaled</strong>(<span title="System.Numerics.Complex">Complex</span> z)</h4>
		<div class="content">Returns the exponentially scaled derivative of Airy function Ai <p>ScaledAiryAiPrime(z) is given by Exp(zta) * AiryAiPrime(z), where zta = (2/3) * z * Sqrt(z). </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.Numerics.Complex">Complex</span></code> z</h6>
          <p class="comments">The value to compute the derivative of the Airy function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.Numerics.Complex">Complex</span></code></h6>
        <p>The exponentially scaled derivative of Airy function Ai. </p>
      </div>
      
    </div>
	</div>
	<div id="AiryAiPrimeScaled" class="method">
		<h4><span title="System.double">double</span> <strong>AiryAiPrimeScaled</strong>(<span title="System.double">double</span> z)</h4>
		<div class="content">Returns the exponentially scaled derivative of the Airy function Ai. <p>ScaledAiryAiPrime(z) is given by Exp(zta) * AiryAiPrime(z), where zta = (2/3) * z * Sqrt(z). </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> z</h6>
          <p class="comments">The value to compute the derivative of the Airy function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The exponentially scaled derivative of the Airy function Ai. </p>
      </div>
      
    </div>
	</div>
	<div id="AiryAiScaled" class="method">
		<h4><span title="System.Numerics.Complex">Complex</span> <strong>AiryAiScaled</strong>(<span title="System.Numerics.Complex">Complex</span> z)</h4>
		<div class="content">Returns the exponentially scaled Airy function Ai. <p>ScaledAiryAi(z) is given by Exp(zta) * AiryAi(z), where zta = (2/3) * z * Sqrt(z). </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.Numerics.Complex">Complex</span></code> z</h6>
          <p class="comments">The value to compute the Airy function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.Numerics.Complex">Complex</span></code></h6>
        <p>The exponentially scaled Airy function Ai. </p>
      </div>
      
    </div>
	</div>
	<div id="AiryAiScaled" class="method">
		<h4><span title="System.double">double</span> <strong>AiryAiScaled</strong>(<span title="System.double">double</span> z)</h4>
		<div class="content">Returns the exponentially scaled Airy function Ai. <p>ScaledAiryAi(z) is given by Exp(zta) * AiryAi(z), where zta = (2/3) * z * Sqrt(z). </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> z</h6>
          <p class="comments">The value to compute the Airy function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The exponentially scaled Airy function Ai. </p>
      </div>
      
    </div>
	</div>
	<div id="AiryBi" class="method">
		<h4><span title="System.double">double</span> <strong>AiryBi</strong>(<span title="System.double">double</span> z)</h4>
		<div class="content">Returns the Airy function Bi. <p>AiryBi(z) is a solution to the Airy equation, y'' - y * z = 0. </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> z</h6>
          <p class="comments">The value to compute the Airy function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The Airy function Bi. </p>
      </div>
      
    </div>
	</div>
	<div id="AiryBi" class="method">
		<h4><span title="System.Numerics.Complex">Complex</span> <strong>AiryBi</strong>(<span title="System.Numerics.Complex">Complex</span> z)</h4>
		<div class="content">Returns the Airy function Bi. <p>AiryBi(z) is a solution to the Airy equation, y'' - y * z = 0. </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.Numerics.Complex">Complex</span></code> z</h6>
          <p class="comments">The value to compute the Airy function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.Numerics.Complex">Complex</span></code></h6>
        <p>The Airy function Bi. </p>
      </div>
      
    </div>
	</div>
	<div id="AiryBiPrime" class="method">
		<h4><span title="System.Numerics.Complex">Complex</span> <strong>AiryBiPrime</strong>(<span title="System.Numerics.Complex">Complex</span> z)</h4>
		<div class="content">Returns the derivative of the Airy function Bi. <p>AiryBiPrime(z) is defined as d/dz AiryBi(z). </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.Numerics.Complex">Complex</span></code> z</h6>
          <p class="comments">The value to compute the derivative of the Airy function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.Numerics.Complex">Complex</span></code></h6>
        <p>The derivative of the Airy function Bi. </p>
      </div>
      
    </div>
	</div>
	<div id="AiryBiPrime" class="method">
		<h4><span title="System.double">double</span> <strong>AiryBiPrime</strong>(<span title="System.double">double</span> z)</h4>
		<div class="content">Returns the derivative of the Airy function Bi. <p>AiryBiPrime(z) is defined as d/dz AiryBi(z). </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> z</h6>
          <p class="comments">The value to compute the derivative of the Airy function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The derivative of the Airy function Bi. </p>
      </div>
      
    </div>
	</div>
	<div id="AiryBiPrimeScaled" class="method">
		<h4><span title="System.Numerics.Complex">Complex</span> <strong>AiryBiPrimeScaled</strong>(<span title="System.Numerics.Complex">Complex</span> z)</h4>
		<div class="content">Returns the exponentially scaled derivative of the Airy function Bi. <p>ScaledAiryBiPrime(z) is given by Exp(-Abs(zta.Real)) * AiryBiPrime(z) where zta = (2 / 3) * z * Sqrt(z). </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.Numerics.Complex">Complex</span></code> z</h6>
          <p class="comments">The value to compute the derivative of the Airy function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.Numerics.Complex">Complex</span></code></h6>
        <p>The exponentially scaled derivative of the Airy function Bi. </p>
      </div>
      
    </div>
	</div>
	<div id="AiryBiPrimeScaled" class="method">
		<h4><span title="System.double">double</span> <strong>AiryBiPrimeScaled</strong>(<span title="System.double">double</span> z)</h4>
		<div class="content">Returns the exponentially scaled derivative of the Airy function Bi. <p>ScaledAiryBiPrime(z) is given by Exp(-Abs(zta.Real)) * AiryBiPrime(z) where zta = (2 / 3) * z * Sqrt(z). </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> z</h6>
          <p class="comments">The value to compute the derivative of the Airy function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The exponentially scaled derivative of the Airy function Bi. </p>
      </div>
      
    </div>
	</div>
	<div id="AiryBiScaled" class="method">
		<h4><span title="System.double">double</span> <strong>AiryBiScaled</strong>(<span title="System.double">double</span> z)</h4>
		<div class="content">Returns the exponentially scaled Airy function Bi. <p>ScaledAiryBi(z) is given by Exp(-Abs(zta.Real)) * AiryBi(z) where zta = (2 / 3) * z * Sqrt(z). </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> z</h6>
          <p class="comments">The value to compute the Airy function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The exponentially scaled Airy function Bi. </p>
      </div>
      
    </div>
	</div>
	<div id="AiryBiScaled" class="method">
		<h4><span title="System.Numerics.Complex">Complex</span> <strong>AiryBiScaled</strong>(<span title="System.Numerics.Complex">Complex</span> z)</h4>
		<div class="content">Returns the exponentially scaled Airy function Bi. <p>ScaledAiryBi(z) is given by Exp(-Abs(zta.Real)) * AiryBi(z) where zta = (2 / 3) * z * Sqrt(z). </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.Numerics.Complex">Complex</span></code> z</h6>
          <p class="comments">The value to compute the Airy function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.Numerics.Complex">Complex</span></code></h6>
        <p>The exponentially scaled Airy function Bi(z). </p>
      </div>
      
    </div>
	</div>
	<div id="BesselI" class="method">
		<h4><span title="System.double">double</span> <strong>BesselI</strong>(<span title="System.double">double</span> n, <span title="System.double">double</span> z)</h4>
		<div class="content">Returns the modified Bessel function of the first kind. <p>BesselI(n, z) is a solution to the modified Bessel differential equation. </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> n</h6>
          <p class="comments">The order of the modified Bessel function. </p>
          <h6><code><span title="System.double">double</span></code> z</h6>
          <p class="comments">The value to compute the modified Bessel function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The modified Bessel function of the first kind. </p>
      </div>
      
    </div>
	</div>
	<div id="BesselI" class="method">
		<h4><span title="System.Numerics.Complex">Complex</span> <strong>BesselI</strong>(<span title="System.double">double</span> n, <span title="System.Numerics.Complex">Complex</span> z)</h4>
		<div class="content">Returns the modified Bessel function of the first kind. <p>BesselI(n, z) is a solution to the modified Bessel differential equation. </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> n</h6>
          <p class="comments">The order of the modified Bessel function. </p>
          <h6><code><span title="System.Numerics.Complex">Complex</span></code> z</h6>
          <p class="comments">The value to compute the modified Bessel function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.Numerics.Complex">Complex</span></code></h6>
        <p>The modified Bessel function of the first kind. </p>
      </div>
      
    </div>
	</div>
	<div id="BesselI0" class="method">
		<h4><span title="System.double">double</span> <strong>BesselI0</strong>(<span title="System.double">double</span> x)</h4>
		<div class="content">Returns the modified Bessel function of first kind, order 0 of the argument. The function is defined as . The range is partitioned into the two intervals [0, 8] and
(8, infinity). Chebyshev polynomial expansions are employed
in each interval. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> x</h6>
          <p class="comments">The value to compute the Bessel function of. </p>
      </div>

      
    </div>
	</div>
	<div id="BesselI0MStruveL0" class="method">
		<h4><span title="System.double">double</span> <strong>BesselI0MStruveL0</strong>(<span title="System.double">double</span> x)</h4>
		<div class="content">Returns the difference between the Bessel I0 and Struve L0 functions. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> x</h6>
          <p class="comments">The value to compute the function of. </p>
      </div>

      
    </div>
	</div>
	<div id="BesselI1" class="method">
		<h4><span title="System.double">double</span> <strong>BesselI1</strong>(<span title="System.double">double</span> x)</h4>
		<div class="content">Returns the modified Bessel function of first kind,
order 1 of the argument. The function is defined as . The range is partitioned into the two intervals [0, 8] and
(8, infinity). Chebyshev polynomial expansions are employed
in each interval. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> x</h6>
          <p class="comments">The value to compute the Bessel function of. </p>
      </div>

      
    </div>
	</div>
	<div id="BesselI1MStruveL1" class="method">
		<h4><span title="System.double">double</span> <strong>BesselI1MStruveL1</strong>(<span title="System.double">double</span> x)</h4>
		<div class="content">Returns the difference between the Bessel I1 and Struve L1 functions. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> x</h6>
          <p class="comments">The value to compute the function of. </p>
      </div>

      
    </div>
	</div>
	<div id="BesselIScaled" class="method">
		<h4><span title="System.Numerics.Complex">Complex</span> <strong>BesselIScaled</strong>(<span title="System.double">double</span> n, <span title="System.Numerics.Complex">Complex</span> z)</h4>
		<div class="content">Returns the exponentially scaled modified Bessel function of the first kind. <p>ScaledBesselI(n, z) is given by Exp(-Abs(z.Real)) * BesselI(n, z). </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> n</h6>
          <p class="comments">The order of the modified Bessel function. </p>
          <h6><code><span title="System.Numerics.Complex">Complex</span></code> z</h6>
          <p class="comments">The value to compute the modified Bessel function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.Numerics.Complex">Complex</span></code></h6>
        <p>The exponentially scaled modified Bessel function of the first kind. </p>
      </div>
      
    </div>
	</div>
	<div id="BesselIScaled" class="method">
		<h4><span title="System.double">double</span> <strong>BesselIScaled</strong>(<span title="System.double">double</span> n, <span title="System.double">double</span> z)</h4>
		<div class="content">Returns the exponentially scaled modified Bessel function of the first kind. <p>ScaledBesselI(n, z) is given by Exp(-Abs(z.Real)) * BesselI(n, z). </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> n</h6>
          <p class="comments">The order of the modified Bessel function. </p>
          <h6><code><span title="System.double">double</span></code> z</h6>
          <p class="comments">The value to compute the modified Bessel function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The exponentially scaled modified Bessel function of the first kind. </p>
      </div>
      
    </div>
	</div>
	<div id="BesselJ" class="method">
		<h4><span title="System.Numerics.Complex">Complex</span> <strong>BesselJ</strong>(<span title="System.double">double</span> n, <span title="System.Numerics.Complex">Complex</span> z)</h4>
		<div class="content">Returns the Bessel function of the first kind. <p>BesselJ(n, z) is a solution to the Bessel differential equation. </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> n</h6>
          <p class="comments">The order of the Bessel function. </p>
          <h6><code><span title="System.Numerics.Complex">Complex</span></code> z</h6>
          <p class="comments">The value to compute the Bessel function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.Numerics.Complex">Complex</span></code></h6>
        <p>The Bessel function of the first kind. </p>
      </div>
      
    </div>
	</div>
	<div id="BesselJ" class="method">
		<h4><span title="System.double">double</span> <strong>BesselJ</strong>(<span title="System.double">double</span> n, <span title="System.double">double</span> z)</h4>
		<div class="content">Returns the Bessel function of the first kind. <p>BesselJ(n, z) is a solution to the Bessel differential equation. </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> n</h6>
          <p class="comments">The order of the Bessel function. </p>
          <h6><code><span title="System.double">double</span></code> z</h6>
          <p class="comments">The value to compute the Bessel function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The Bessel function of the first kind. </p>
      </div>
      
    </div>
	</div>
	<div id="BesselJScaled" class="method">
		<h4><span title="System.double">double</span> <strong>BesselJScaled</strong>(<span title="System.double">double</span> n, <span title="System.double">double</span> z)</h4>
		<div class="content">Returns the exponentially scaled Bessel function of the first kind. <p>ScaledBesselJ(n, z) is given by Exp(-Abs(z.Imaginary)) * BesselJ(n, z). </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> n</h6>
          <p class="comments">The order of the Bessel function. </p>
          <h6><code><span title="System.double">double</span></code> z</h6>
          <p class="comments">The value to compute the Bessel function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The exponentially scaled Bessel function of the first kind. </p>
      </div>
      
    </div>
	</div>
	<div id="BesselJScaled" class="method">
		<h4><span title="System.Numerics.Complex">Complex</span> <strong>BesselJScaled</strong>(<span title="System.double">double</span> n, <span title="System.Numerics.Complex">Complex</span> z)</h4>
		<div class="content">Returns the exponentially scaled Bessel function of the first kind. <p>ScaledBesselJ(n, z) is given by Exp(-Abs(z.Imaginary)) * BesselJ(n, z). </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> n</h6>
          <p class="comments">The order of the Bessel function. </p>
          <h6><code><span title="System.Numerics.Complex">Complex</span></code> z</h6>
          <p class="comments">The value to compute the Bessel function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.Numerics.Complex">Complex</span></code></h6>
        <p>The exponentially scaled Bessel function of the first kind. </p>
      </div>
      
    </div>
	</div>
	<div id="BesselK" class="method">
		<h4><span title="System.Numerics.Complex">Complex</span> <strong>BesselK</strong>(<span title="System.double">double</span> n, <span title="System.Numerics.Complex">Complex</span> z)</h4>
		<div class="content">Returns the modified Bessel function of the second kind. <p>BesselK(n, z) is a solution to the modified Bessel differential equation. </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> n</h6>
          <p class="comments">The order of the modified Bessel function. </p>
          <h6><code><span title="System.Numerics.Complex">Complex</span></code> z</h6>
          <p class="comments">The value to compute the modified Bessel function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.Numerics.Complex">Complex</span></code></h6>
        <p>The modified Bessel function of the second kind. </p>
      </div>
      
    </div>
	</div>
	<div id="BesselK" class="method">
		<h4><span title="System.double">double</span> <strong>BesselK</strong>(<span title="System.double">double</span> n, <span title="System.double">double</span> z)</h4>
		<div class="content">Returns the modified Bessel function of the second kind. <p>BesselK(n, z) is a solution to the modified Bessel differential equation. </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> n</h6>
          <p class="comments">The order of the modified Bessel function. </p>
          <h6><code><span title="System.double">double</span></code> z</h6>
          <p class="comments">The value to compute the modified Bessel function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The modified Bessel function of the second kind. </p>
      </div>
      
    </div>
	</div>
	<div id="BesselK0" class="method">
		<h4><span title="System.double">double</span> <strong>BesselK0</strong>(<span title="System.double">double</span> x)</h4>
		<div class="content">Returns the modified Bessel function of the second kind
of order 0 of the argument. The range is partitioned into the two intervals [0, 8] and
(8, infinity). Chebyshev polynomial expansions are employed
in each interval. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> x</h6>
          <p class="comments">The value to compute the Bessel function of. </p>
      </div>

      
    </div>
	</div>
	<div id="BesselK0e" class="method">
		<h4><span title="System.double">double</span> <strong>BesselK0e</strong>(<span title="System.double">double</span> x)</h4>
		<div class="content">Returns the exponentially scaled modified Bessel function
of the second kind of order 0 of the argument. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> x</h6>
          <p class="comments">The value to compute the Bessel function of. </p>
      </div>

      
    </div>
	</div>
	<div id="BesselK1" class="method">
		<h4><span title="System.double">double</span> <strong>BesselK1</strong>(<span title="System.double">double</span> x)</h4>
		<div class="content">Returns the modified Bessel function of the second kind
of order 1 of the argument. The range is partitioned into the two intervals [0, 2] and
(2, infinity). Chebyshev polynomial expansions are employed
in each interval. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> x</h6>
          <p class="comments">The value to compute the Bessel function of. </p>
      </div>

      
    </div>
	</div>
	<div id="BesselK1e" class="method">
		<h4><span title="System.double">double</span> <strong>BesselK1e</strong>(<span title="System.double">double</span> x)</h4>
		<div class="content">Returns the exponentially scaled modified Bessel function
of the second kind of order 1 of the argument.. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> x</h6>
          <p class="comments">The value to compute the Bessel function of. </p>
      </div>

      
    </div>
	</div>
	<div id="BesselKScaled" class="method">
		<h4><span title="System.double">double</span> <strong>BesselKScaled</strong>(<span title="System.double">double</span> n, <span title="System.double">double</span> z)</h4>
		<div class="content">Returns the exponentially scaled modified Bessel function of the second kind. <p>ScaledBesselK(n, z) is given by Exp(z) * BesselK(n, z). </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> n</h6>
          <p class="comments">The order of the modified Bessel function. </p>
          <h6><code><span title="System.double">double</span></code> z</h6>
          <p class="comments">The value to compute the modified Bessel function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The exponentially scaled modified Bessel function of the second kind. </p>
      </div>
      
    </div>
	</div>
	<div id="BesselKScaled" class="method">
		<h4><span title="System.Numerics.Complex">Complex</span> <strong>BesselKScaled</strong>(<span title="System.double">double</span> n, <span title="System.Numerics.Complex">Complex</span> z)</h4>
		<div class="content">Returns the exponentially scaled modified Bessel function of the second kind. <p>ScaledBesselK(n, z) is given by Exp(z) * BesselK(n, z). </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> n</h6>
          <p class="comments">The order of the modified Bessel function. </p>
          <h6><code><span title="System.Numerics.Complex">Complex</span></code> z</h6>
          <p class="comments">The value to compute the modified Bessel function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.Numerics.Complex">Complex</span></code></h6>
        <p>The exponentially scaled modified Bessel function of the second kind. </p>
      </div>
      
    </div>
	</div>
	<div id="BesselY" class="method">
		<h4><span title="System.Numerics.Complex">Complex</span> <strong>BesselY</strong>(<span title="System.double">double</span> n, <span title="System.Numerics.Complex">Complex</span> z)</h4>
		<div class="content">Returns the Bessel function of the second kind. <p>BesselY(n, z) is a solution to the Bessel differential equation. </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> n</h6>
          <p class="comments">The order of the Bessel function. </p>
          <h6><code><span title="System.Numerics.Complex">Complex</span></code> z</h6>
          <p class="comments">The value to compute the Bessel function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.Numerics.Complex">Complex</span></code></h6>
        <p>The Bessel function of the second kind. </p>
      </div>
      
    </div>
	</div>
	<div id="BesselY" class="method">
		<h4><span title="System.double">double</span> <strong>BesselY</strong>(<span title="System.double">double</span> n, <span title="System.double">double</span> z)</h4>
		<div class="content">Returns the Bessel function of the second kind. <p>BesselY(n, z) is a solution to the Bessel differential equation. </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> n</h6>
          <p class="comments">The order of the Bessel function. </p>
          <h6><code><span title="System.double">double</span></code> z</h6>
          <p class="comments">The value to compute the Bessel function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The Bessel function of the second kind. </p>
      </div>
      
    </div>
	</div>
	<div id="BesselYScaled" class="method">
		<h4><span title="System.Numerics.Complex">Complex</span> <strong>BesselYScaled</strong>(<span title="System.double">double</span> n, <span title="System.Numerics.Complex">Complex</span> z)</h4>
		<div class="content">Returns the exponentially scaled Bessel function of the second kind. <p>ScaledBesselY(n, z) is given by Exp(-Abs(z.Imaginary)) * Y(n, z). </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> n</h6>
          <p class="comments">The order of the Bessel function. </p>
          <h6><code><span title="System.Numerics.Complex">Complex</span></code> z</h6>
          <p class="comments">The value to compute the Bessel function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.Numerics.Complex">Complex</span></code></h6>
        <p>The exponentially scaled Bessel function of the second kind. </p>
      </div>
      
    </div>
	</div>
	<div id="BesselYScaled" class="method">
		<h4><span title="System.double">double</span> <strong>BesselYScaled</strong>(<span title="System.double">double</span> n, <span title="System.double">double</span> z)</h4>
		<div class="content">Returns the exponentially scaled Bessel function of the second kind. <p>ScaledBesselY(n, z) is given by Exp(-Abs(z.Imaginary)) * BesselY(n, z). </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> n</h6>
          <p class="comments">The order of the Bessel function. </p>
          <h6><code><span title="System.double">double</span></code> z</h6>
          <p class="comments">The value to compute the Bessel function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The exponentially scaled Bessel function of the second kind. </p>
      </div>
      
    </div>
	</div>
	<div id="Beta" class="method">
		<h4><span title="System.double">double</span> <strong>Beta</strong>(<span title="System.double">double</span> z, <span title="System.double">double</span> w)</h4>
		<div class="content">Computes the Euler Beta function. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> z</h6>
          <p class="comments">The first Beta parameter, a positive real number. </p>
          <h6><code><span title="System.double">double</span></code> w</h6>
          <p class="comments">The second Beta parameter, a positive real number. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The Euler Beta function evaluated at z,w. </p>
      </div>
      
    </div>
	</div>
	<div id="BetaIncomplete" class="method">
		<h4><span title="System.double">double</span> <strong>BetaIncomplete</strong>(<span title="System.double">double</span> a, <span title="System.double">double</span> b, <span title="System.double">double</span> x)</h4>
		<div class="content">Returns the lower incomplete (unregularized) beta function
B(a,b,x) = int(t^(a-1)*(1-t)^(b-1),t=0..x) for real a > 0, b > 0, 1 >= x >= 0. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> a</h6>
          <p class="comments">The first Beta parameter, a positive real number. </p>
          <h6><code><span title="System.double">double</span></code> b</h6>
          <p class="comments">The second Beta parameter, a positive real number. </p>
          <h6><code><span title="System.double">double</span></code> x</h6>
          <p class="comments">The upper limit of the integral. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The lower incomplete (unregularized) beta function. </p>
      </div>
      
    </div>
	</div>
	<div id="BetaLn" class="method">
		<h4><span title="System.double">double</span> <strong>BetaLn</strong>(<span title="System.double">double</span> z, <span title="System.double">double</span> w)</h4>
		<div class="content">Computes the logarithm of the Euler Beta function. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> z</h6>
          <p class="comments">The first Beta parameter, a positive real number. </p>
          <h6><code><span title="System.double">double</span></code> w</h6>
          <p class="comments">The second Beta parameter, a positive real number. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The logarithm of the Euler Beta function evaluated at z,w. </p>
      </div>
      
    </div>
	</div>
	<div id="BetaRegularized" class="method">
		<h4><span title="System.double">double</span> <strong>BetaRegularized</strong>(<span title="System.double">double</span> a, <span title="System.double">double</span> b, <span title="System.double">double</span> x)</h4>
		<div class="content">Returns the regularized lower incomplete beta function
I_x(a,b) = 1/Beta(a,b) * int(t^(a-1)*(1-t)^(b-1),t=0..x) for real a > 0, b > 0, 1 >= x >= 0. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> a</h6>
          <p class="comments">The first Beta parameter, a positive real number. </p>
          <h6><code><span title="System.double">double</span></code> b</h6>
          <p class="comments">The second Beta parameter, a positive real number. </p>
          <h6><code><span title="System.double">double</span></code> x</h6>
          <p class="comments">The upper limit of the integral. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The regularized lower incomplete beta function. </p>
      </div>
      
    </div>
	</div>
	<div id="Binomial" class="method">
		<h4><span title="System.double">double</span> <strong>Binomial</strong>(<span title="System.int">int</span> n, <span title="System.int">int</span> k)</h4>
		<div class="content">Computes the binomial coefficient: n choose k. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.int">int</span></code> n</h6>
          <p class="comments">A nonnegative value n. </p>
          <h6><code><span title="System.int">int</span></code> k</h6>
          <p class="comments">A nonnegative value h. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The binomial coefficient: n choose k. </p>
      </div>
      
    </div>
	</div>
	<div id="BinomialLn" class="method">
		<h4><span title="System.double">double</span> <strong>BinomialLn</strong>(<span title="System.int">int</span> n, <span title="System.int">int</span> k)</h4>
		<div class="content">Computes the natural logarithm of the binomial coefficient: ln(n choose k). 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.int">int</span></code> n</h6>
          <p class="comments">A nonnegative value n. </p>
          <h6><code><span title="System.int">int</span></code> k</h6>
          <p class="comments">A nonnegative value h. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The logarithmic binomial coefficient: ln(n choose k). </p>
      </div>
      
    </div>
	</div>
	<div id="DiGamma" class="method">
		<h4><span title="System.double">double</span> <strong>DiGamma</strong>(<span title="System.double">double</span> x)</h4>
		<div class="content">Computes the Digamma function which is mathematically defined as the derivative of the logarithm of the gamma function.
This implementation is based on
Jose Bernardo
Algorithm AS 103:
Psi ( Digamma ) Function,
Applied Statistics,
Volume 25, Number 3, 1976, pages 315-317.
Using the modifications as in Tom Minka's lightspeed toolbox. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> x</h6>
          <p class="comments">The argument of the digamma function. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The value of the DiGamma function at  <var>x</var>. </p>
      </div>
      
    </div>
	</div>
	<div id="DiGammaInv" class="method">
		<h4><span title="System.double">double</span> <strong>DiGammaInv</strong>(<span title="System.double">double</span> p)</h4>
		<div class="content"><p>Computes the inverse Digamma function: this is the inverse of the logarithm of the gamma function. This function will
only return solutions that are positive. </p> <p>This implementation is based on the bisection method. </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> p</h6>
          <p class="comments">The argument of the inverse digamma function. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The positive solution to the inverse DiGamma function at  <var>p</var>. </p>
      </div>
      
    </div>
	</div>
	<div id="Erf" class="method">
		<h4><span title="System.double">double</span> <strong>Erf</strong>(<span title="System.double">double</span> x)</h4>
		<div class="content">Calculates the error function. <blockquote class="remarks">
  <ul><li></li><li></li></ul> 
</blockquote>


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> x</h6>
          <p class="comments">The value to evaluate. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>the error function evaluated at given value. </p>
      </div>
      
    </div>
	</div>
	<div id="Erfc" class="method">
		<h4><span title="System.double">double</span> <strong>Erfc</strong>(<span title="System.double">double</span> x)</h4>
		<div class="content">Calculates the complementary error function. <blockquote class="remarks">
  <ul><li></li><li></li></ul> 
</blockquote>


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> x</h6>
          <p class="comments">The value to evaluate. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>the complementary error function evaluated at given value. </p>
      </div>
      
    </div>
	</div>
	<div id="ErfcInv" class="method">
		<h4><span title="System.double">double</span> <strong>ErfcInv</strong>(<span title="System.double">double</span> z)</h4>
		<div class="content">Calculates the complementary inverse error function evaluated at z. <blockquote class="remarks">
  We have tested this implementation against the arbitrary precision mpmath library
and found cases where we can only guarantee 9 significant figures correct. <ul><li></li><li></li></ul> 
</blockquote>


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> z</h6>
          <p class="comments">value to evaluate. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The complementary inverse error function evaluated at given value. </p>
      </div>
      
    </div>
	</div>
	<div id="ErfInv" class="method">
		<h4><span title="System.double">double</span> <strong>ErfInv</strong>(<span title="System.double">double</span> z)</h4>
		<div class="content">Calculates the inverse error function evaluated at z. <blockquote class="remarks">
  <ul><li></li><li></li></ul> 
</blockquote>


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> z</h6>
          <p class="comments">value to evaluate. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The inverse error function evaluated at given value. </p>
      </div>
      
    </div>
	</div>
	<div id="ExponentialIntegral" class="method">
		<h4><span title="System.double">double</span> <strong>ExponentialIntegral</strong>(<span title="System.double">double</span> x, <span title="System.int">int</span> n)</h4>
		<div class="content">Computes the generalized Exponential Integral function (En). <blockquote class="remarks">
  <p>This implementation of the computation of the Exponential Integral function follows the derivation in
"Handbook of Mathematical Functions, Applied Mathematics Series, Volume 55", Abramowitz, M., and Stegun, I.A. 1964,  reprinted 1968 by
Dover Publications, New York), Chapters 6, 7, and 26.
AND
"Advanced mathematical methods for scientists and engineers", Bender, Carl M.; Steven A. Orszag (1978). page 253 </p> <p>for x > 1  uses continued fraction approach that is often used to compute incomplete gamma.
for 0 < x <= 1 uses Taylor series expansion </p> <p>Our unit tests suggest that the accuracy of the Exponential Integral function is correct up to 13 floating point digits. </p> 
</blockquote>


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> x</h6>
          <p class="comments">The argument of the Exponential Integral function. </p>
          <h6><code><span title="System.int">int</span></code> n</h6>
          <p class="comments">Integer power of the denominator term. Generalization index. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The value of the Exponential Integral function. </p>
      </div>
      
    </div>
	</div>
	<div id="ExponentialMinusOne" class="method">
		<h4><span title="System.double">double</span> <strong>ExponentialMinusOne</strong>(<span title="System.double">double</span> power)</h4>
		<div class="content">Numerically stable exponential minus one, i.e.  <code>x -> exp(x)-1</code> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> power</h6>
          <p class="comments">A number specifying a power. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>Returns  <code>exp(power)-1</code>. </p>
      </div>
      
    </div>
	</div>
	<div id="Factorial" class="method">
		<h4><span title="System.Numerics.BigInteger">BigInteger</span> <strong>Factorial</strong>(<span title="System.Numerics.BigInteger">BigInteger</span> x)</h4>
		<div class="content">Computes the factorial of an integer. 



      
    </div>
	</div>
	<div id="Factorial" class="method">
		<h4><span title="System.double">double</span> <strong>Factorial</strong>(<span title="System.int">int</span> x)</h4>
		<div class="content">Computes the factorial function x -> x! of an integer number > 0. The function can represent all number up
to 22! exactly, all numbers up to 170! using a double representation. All larger values will overflow. <blockquote class="remarks">
  If you need to multiply or divide various such factorials, consider using the logarithmic version <a href="../MathNet.Numerics/SpecialFunctions.htm#FactorialLn">FactorialLn</a>  instead so you can add instead of multiply and subtract instead of divide, and
then exponentiate the result using  <span title="Exp">Exp</span>. This will also circumvent the problem that
factorials become very large even for small parameters. 
</blockquote>



      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>A value value! for value > 0 </p>
      </div>
      
    </div>
	</div>
	<div id="FactorialLn" class="method">
		<h4><span title="System.double">double</span> <strong>FactorialLn</strong>(<span title="System.int">int</span> x)</h4>
		<div class="content">Computes the logarithmic factorial function x -> ln(x!) of an integer number > 0. 



      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>A value value! for value > 0 </p>
      </div>
      
    </div>
	</div>
	<div id="FallingFactorial" class="method">
		<h4><span title="System.double">double</span> <strong>FallingFactorial</strong>(<span title="System.double">double</span> x, <span title="System.int">int</span> n)</h4>
		<div class="content">Computes the Falling Factorial (Pochhammer function)  x -> x(n), n>= 0. see: https://en.wikipedia.org/wiki/Falling_and_rising_factorials 



      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The real value of the Falling Factorial for x and n </p>
      </div>
      
    </div>
	</div>
	<div id="Gamma" class="method">
		<h4><span title="System.double">double</span> <strong>Gamma</strong>(<span title="System.double">double</span> z)</h4>
		<div class="content">Computes the Gamma function. <blockquote class="remarks">
  <p>This implementation of the computation of the gamma and logarithm of the gamma function follows the derivation in
"An Analysis Of The Lanczos Gamma Approximation", Glendon Ralph Pugh, 2004.
We use the implementation listed on p. 116 which should achieve an accuracy of 16 floating point digits. Although 16 digit accuracy
should be sufficient for double values, improving accuracy is possible (see p. 126 in Pugh). </p> <p>Our unit tests suggest that the accuracy of the Gamma function is correct up to 13 floating point digits. </p> 
</blockquote>


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> z</h6>
          <p class="comments">The argument of the gamma function. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The logarithm of the gamma function. </p>
      </div>
      
    </div>
	</div>
	<div id="GammaLn" class="method">
		<h4><span title="System.double">double</span> <strong>GammaLn</strong>(<span title="System.double">double</span> z)</h4>
		<div class="content">Computes the logarithm of the Gamma function. <blockquote class="remarks">
  <p>This implementation of the computation of the gamma and logarithm of the gamma function follows the derivation in
"An Analysis Of The Lanczos Gamma Approximation", Glendon Ralph Pugh, 2004.
We use the implementation listed on p. 116 which achieves an accuracy of 16 floating point digits. Although 16 digit accuracy
should be sufficient for double values, improving accuracy is possible (see p. 126 in Pugh). </p> <p>Our unit tests suggest that the accuracy of the Gamma function is correct up to 14 floating point digits. </p> 
</blockquote>


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> z</h6>
          <p class="comments">The argument of the gamma function. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The logarithm of the gamma function. </p>
      </div>
      
    </div>
	</div>
	<div id="GammaLowerIncomplete" class="method">
		<h4><span title="System.double">double</span> <strong>GammaLowerIncomplete</strong>(<span title="System.double">double</span> a, <span title="System.double">double</span> x)</h4>
		<div class="content">Returns the lower incomplete gamma function
gamma(a,x) = int(exp(-t)t^(a-1),t=0..x) for real a > 0, x > 0. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> a</h6>
          <p class="comments">The argument for the gamma function. </p>
          <h6><code><span title="System.double">double</span></code> x</h6>
          <p class="comments">The upper integral limit. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The lower incomplete gamma function. </p>
      </div>
      
    </div>
	</div>
	<div id="GammaLowerRegularized" class="method">
		<h4><span title="System.double">double</span> <strong>GammaLowerRegularized</strong>(<span title="System.double">double</span> a, <span title="System.double">double</span> x)</h4>
		<div class="content">Returns the lower incomplete regularized gamma function
P(a,x) = 1/Gamma(a) * int(exp(-t)t^(a-1),t=0..x) for real a > 0, x > 0. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> a</h6>
          <p class="comments">The argument for the gamma function. </p>
          <h6><code><span title="System.double">double</span></code> x</h6>
          <p class="comments">The upper integral limit. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The lower incomplete gamma function. </p>
      </div>
      
    </div>
	</div>
	<div id="GammaLowerRegularizedInv" class="method">
		<h4><span title="System.double">double</span> <strong>GammaLowerRegularizedInv</strong>(<span title="System.double">double</span> a, <span title="System.double">double</span> y0)</h4>
		<div class="content">Returns the inverse P^(-1) of the regularized lower incomplete gamma function
P(a,x) = 1/Gamma(a) * int(exp(-t)t^(a-1),t=0..x) for real a > 0, x > 0,
such that P^(-1)(a,P(a,x)) == x. 



      
    </div>
	</div>
	<div id="GammaUpperIncomplete" class="method">
		<h4><span title="System.double">double</span> <strong>GammaUpperIncomplete</strong>(<span title="System.double">double</span> a, <span title="System.double">double</span> x)</h4>
		<div class="content">Returns the upper incomplete gamma function
Gamma(a,x) = int(exp(-t)t^(a-1),t=0..x) for real a > 0, x > 0. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> a</h6>
          <p class="comments">The argument for the gamma function. </p>
          <h6><code><span title="System.double">double</span></code> x</h6>
          <p class="comments">The lower integral limit. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The upper incomplete gamma function. </p>
      </div>
      
    </div>
	</div>
	<div id="GammaUpperRegularized" class="method">
		<h4><span title="System.double">double</span> <strong>GammaUpperRegularized</strong>(<span title="System.double">double</span> a, <span title="System.double">double</span> x)</h4>
		<div class="content">Returns the upper incomplete regularized gamma function
Q(a,x) = 1/Gamma(a) * int(exp(-t)t^(a-1),t=0..x) for real a > 0, x > 0. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> a</h6>
          <p class="comments">The argument for the gamma function. </p>
          <h6><code><span title="System.double">double</span></code> x</h6>
          <p class="comments">The lower integral limit. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The upper incomplete regularized gamma function. </p>
      </div>
      
    </div>
	</div>
	<div id="GeneralHarmonic" class="method">
		<h4><span title="System.double">double</span> <strong>GeneralHarmonic</strong>(<span title="System.int">int</span> n, <span title="System.double">double</span> m)</h4>
		<div class="content">Compute the generalized harmonic number of order n of m. (1 + 1/2^m + 1/3^m +... + 1/n^m) 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.int">int</span></code> n</h6>
          <p class="comments">The order parameter. </p>
          <h6><code><span title="System.double">double</span></code> m</h6>
          <p class="comments">The power parameter. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>General Harmonic number. </p>
      </div>
      
    </div>
	</div>
	<div id="GeneralizedHypergeometric" class="method">
		<h4><span title="System.double">double</span> <strong>GeneralizedHypergeometric</strong>(<span title="System.Double[]">Double[]</span> a, <span title="System.Double[]">Double[]</span> b, <span title="System.int">int</span> z)</h4>
		<div class="content">A generalized hypergeometric series is a power series in which the ratio of successive coefficients indexed by n is a rational function of n.
This is the most common pFq(a1,..., ap; b1,...,bq; z) representation
see: https://en.wikipedia.org/wiki/Generalized_hypergeometric_function 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.Double[]">Double[]</span></code> a</h6>
          <p class="comments">The list of coefficients in the numerator </p>
          <h6><code><span title="System.Double[]">Double[]</span></code> b</h6>
          <p class="comments">The list of coefficients in the denominator </p>
          <h6><code><span title="System.int">int</span></code> z</h6>
          <p class="comments">The variable in the power series </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The value of the Generalized HyperGeometric Function. </p>
      </div>
      
    </div>
	</div>
	<div id="HankelH1" class="method">
		<h4><span title="System.Numerics.Complex">Complex</span> <strong>HankelH1</strong>(<span title="System.double">double</span> n, <span title="System.Numerics.Complex">Complex</span> z)</h4>
		<div class="content">Returns the Hankel function of the first kind. <p>HankelH1(n, z) is defined as BesselJ(n, z) + j * BesselY(n, z). </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> n</h6>
          <p class="comments">The order of the Hankel function. </p>
          <h6><code><span title="System.Numerics.Complex">Complex</span></code> z</h6>
          <p class="comments">The value to compute the Hankel function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.Numerics.Complex">Complex</span></code></h6>
        <p>The Hankel function of the first kind. </p>
      </div>
      
    </div>
	</div>
	<div id="HankelH1Scaled" class="method">
		<h4><span title="System.Numerics.Complex">Complex</span> <strong>HankelH1Scaled</strong>(<span title="System.double">double</span> n, <span title="System.Numerics.Complex">Complex</span> z)</h4>
		<div class="content">Returns the exponentially scaled Hankel function of the first kind. <p>ScaledHankelH1(n, z) is given by Exp(-z * j) * HankelH1(n, z) where j = Sqrt(-1). </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> n</h6>
          <p class="comments">The order of the Hankel function. </p>
          <h6><code><span title="System.Numerics.Complex">Complex</span></code> z</h6>
          <p class="comments">The value to compute the Hankel function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.Numerics.Complex">Complex</span></code></h6>
        <p>The exponentially scaled Hankel function of the first kind. </p>
      </div>
      
    </div>
	</div>
	<div id="HankelH2" class="method">
		<h4><span title="System.Numerics.Complex">Complex</span> <strong>HankelH2</strong>(<span title="System.double">double</span> n, <span title="System.Numerics.Complex">Complex</span> z)</h4>
		<div class="content">Returns the Hankel function of the second kind. <p>HankelH2(n, z) is defined as BesselJ(n, z) - j * BesselY(n, z). </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> n</h6>
          <p class="comments">The order of the Hankel function. </p>
          <h6><code><span title="System.Numerics.Complex">Complex</span></code> z</h6>
          <p class="comments">The value to compute the Hankel function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.Numerics.Complex">Complex</span></code></h6>
        <p>The Hankel function of the second kind. </p>
      </div>
      
    </div>
	</div>
	<div id="HankelH2Scaled" class="method">
		<h4><span title="System.Numerics.Complex">Complex</span> <strong>HankelH2Scaled</strong>(<span title="System.double">double</span> n, <span title="System.Numerics.Complex">Complex</span> z)</h4>
		<div class="content">Returns the exponentially scaled Hankel function of the second kind. <p>ScaledHankelH2(n, z) is given by Exp(z * j) * HankelH2(n, z) where j = Sqrt(-1). </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> n</h6>
          <p class="comments">The order of the Hankel function. </p>
          <h6><code><span title="System.Numerics.Complex">Complex</span></code> z</h6>
          <p class="comments">The value to compute the Hankel function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.Numerics.Complex">Complex</span></code></h6>
        <p>The exponentially scaled Hankel function of the second kind. </p>
      </div>
      
    </div>
	</div>
	<div id="Harmonic" class="method">
		<h4><span title="System.double">double</span> <strong>Harmonic</strong>(<span title="System.int">int</span> t)</h4>
		<div class="content">Computes the  <var>t</var> 'th Harmonic number. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.int">int</span></code> t</h6>
          <p class="comments">The Harmonic number which needs to be computed. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The t'th Harmonic number. </p>
      </div>
      
    </div>
	</div>
	<div id="Hypotenuse" class="method">
		<h4><a href="../MathNet.Numerics/Complex32.htm">Complex32</a> <strong>Hypotenuse</strong>(<a href="../MathNet.Numerics/Complex32.htm">Complex32</a> a, <a href="../MathNet.Numerics/Complex32.htm">Complex32</a> b)</h4>
		<div class="content">Numerically stable hypotenuse of a right angle triangle, i.e.  <code>(a,b) -> sqrt(a^2 + b^2)</code> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../MathNet.Numerics/Complex32.htm">Complex32</a></code> a</h6>
          <p class="comments">The length of side a of the triangle. </p>
          <h6><code><a href="../MathNet.Numerics/Complex32.htm">Complex32</a></code> b</h6>
          <p class="comments">The length of side b of the triangle. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><a href="../MathNet.Numerics/Complex32.htm">Complex32</a></code></h6>
        <p>Returns  <code>sqrt(a2 + b2)</code>  without underflow/overflow. </p>
      </div>
      
    </div>
	</div>
	<div id="Hypotenuse" class="method">
		<h4><span title="System.double">double</span> <strong>Hypotenuse</strong>(<span title="System.double">double</span> a, <span title="System.double">double</span> b)</h4>
		<div class="content">Numerically stable hypotenuse of a right angle triangle, i.e.  <code>(a,b) -> sqrt(a^2 + b^2)</code> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> a</h6>
          <p class="comments">The length of side a of the triangle. </p>
          <h6><code><span title="System.double">double</span></code> b</h6>
          <p class="comments">The length of side b of the triangle. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>Returns  <code>sqrt(a2 + b2)</code>  without underflow/overflow. </p>
      </div>
      
    </div>
	</div>
	<div id="Hypotenuse" class="method">
		<h4><span title="System.float">float</span> <strong>Hypotenuse</strong>(<span title="System.float">float</span> a, <span title="System.float">float</span> b)</h4>
		<div class="content">Numerically stable hypotenuse of a right angle triangle, i.e.  <code>(a,b) -> sqrt(a^2 + b^2)</code> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.float">float</span></code> a</h6>
          <p class="comments">The length of side a of the triangle. </p>
          <h6><code><span title="System.float">float</span></code> b</h6>
          <p class="comments">The length of side b of the triangle. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.float">float</span></code></h6>
        <p>Returns  <code>sqrt(a2 + b2)</code>  without underflow/overflow. </p>
      </div>
      
    </div>
	</div>
	<div id="Hypotenuse" class="method">
		<h4><span title="System.Numerics.Complex">Complex</span> <strong>Hypotenuse</strong>(<span title="System.Numerics.Complex">Complex</span> a, <span title="System.Numerics.Complex">Complex</span> b)</h4>
		<div class="content">Numerically stable hypotenuse of a right angle triangle, i.e.  <code>(a,b) -> sqrt(a^2 + b^2)</code> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.Numerics.Complex">Complex</span></code> a</h6>
          <p class="comments">The length of side a of the triangle. </p>
          <h6><code><span title="System.Numerics.Complex">Complex</span></code> b</h6>
          <p class="comments">The length of side b of the triangle. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.Numerics.Complex">Complex</span></code></h6>
        <p>Returns  <code>sqrt(a2 + b2)</code>  without underflow/overflow. </p>
      </div>
      
    </div>
	</div>
	<div id="KelvinBe" class="method">
		<h4><span title="System.Numerics.Complex">Complex</span> <strong>KelvinBe</strong>(<span title="System.double">double</span> nu, <span title="System.double">double</span> x)</h4>
		<div class="content">Returns the Kelvin function of the first kind. <p>KelvinBe(nu, x) is given by BesselJ(0, j * sqrt(j) * x) where j = sqrt(-1). </p> <p>KelvinBer(nu, x) and KelvinBei(nu, x) are the real and imaginary parts of the KelvinBe(nu, x) </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> nu</h6>
          <p class="comments">the order of the the Kelvin function. </p>
          <h6><code><span title="System.double">double</span></code> x</h6>
          <p class="comments">The value to compute the Kelvin function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.Numerics.Complex">Complex</span></code></h6>
        <p>The Kelvin function of the first kind. </p>
      </div>
      
    </div>
	</div>
	<div id="KelvinBei" class="method">
		<h4><span title="System.double">double</span> <strong>KelvinBei</strong>(<span title="System.double">double</span> nu, <span title="System.double">double</span> x)</h4>
		<div class="content">Returns the Kelvin function bei. <p>KelvinBei(nu, x) is given by the imaginary part of BesselJ(nu, j * sqrt(j) * x) where j = sqrt(-1). </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> nu</h6>
          <p class="comments">the order of the the Kelvin function. </p>
          <h6><code><span title="System.double">double</span></code> x</h6>
          <p class="comments">The value to compute the Kelvin function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The Kelvin function bei. </p>
      </div>
      
    </div>
	</div>
	<div id="KelvinBei" class="method">
		<h4><span title="System.double">double</span> <strong>KelvinBei</strong>(<span title="System.double">double</span> x)</h4>
		<div class="content">Returns the Kelvin function bei. <p>KelvinBei(x) is given by the imaginary part of BesselJ(0, j * sqrt(j) * x) where j = sqrt(-1). </p> <p>KelvinBei(x) is equivalent to KelvinBei(0, x). </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> x</h6>
          <p class="comments">The value to compute the Kelvin function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The Kelvin function bei. </p>
      </div>
      
    </div>
	</div>
	<div id="KelvinBeiPrime" class="method">
		<h4><span title="System.double">double</span> <strong>KelvinBeiPrime</strong>(<span title="System.double">double</span> nu, <span title="System.double">double</span> x)</h4>
		<div class="content">Returns the derivative of the Kelvin function bei. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> nu</h6>
          <p class="comments">The order of the Kelvin function. </p>
          <h6><code><span title="System.double">double</span></code> x</h6>
          <p class="comments">The value to compute the derivative of the Kelvin function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>the derivative of the Kelvin function bei. </p>
      </div>
      
    </div>
	</div>
	<div id="KelvinBeiPrime" class="method">
		<h4><span title="System.double">double</span> <strong>KelvinBeiPrime</strong>(<span title="System.double">double</span> x)</h4>
		<div class="content">Returns the derivative of the Kelvin function bei. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> x</h6>
          <p class="comments">The value to compute the derivative of the Kelvin function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The derivative of the Kelvin function bei. </p>
      </div>
      
    </div>
	</div>
	<div id="KelvinBer" class="method">
		<h4><span title="System.double">double</span> <strong>KelvinBer</strong>(<span title="System.double">double</span> x)</h4>
		<div class="content">Returns the Kelvin function ber. <p>KelvinBer(x) is given by the real part of BesselJ(0, j * sqrt(j) * x) where j = sqrt(-1). </p> <p>KelvinBer(x) is equivalent to KelvinBer(0, x). </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> x</h6>
          <p class="comments">The value to compute the Kelvin function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The Kelvin function ber. </p>
      </div>
      
    </div>
	</div>
	<div id="KelvinBer" class="method">
		<h4><span title="System.double">double</span> <strong>KelvinBer</strong>(<span title="System.double">double</span> nu, <span title="System.double">double</span> x)</h4>
		<div class="content">Returns the Kelvin function ber. <p>KelvinBer(nu, x) is given by the real part of BesselJ(nu, j * sqrt(j) * x) where j = sqrt(-1). </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> nu</h6>
          <p class="comments">the order of the the Kelvin function. </p>
          <h6><code><span title="System.double">double</span></code> x</h6>
          <p class="comments">The value to compute the Kelvin function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The Kelvin function ber. </p>
      </div>
      
    </div>
	</div>
	<div id="KelvinBerPrime" class="method">
		<h4><span title="System.double">double</span> <strong>KelvinBerPrime</strong>(<span title="System.double">double</span> x)</h4>
		<div class="content">Returns the derivative of the Kelvin function ber. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> x</h6>
          <p class="comments">The value to compute the derivative of the Kelvin function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The derivative of the Kelvin function ber. </p>
      </div>
      
    </div>
	</div>
	<div id="KelvinBerPrime" class="method">
		<h4><span title="System.double">double</span> <strong>KelvinBerPrime</strong>(<span title="System.double">double</span> nu, <span title="System.double">double</span> x)</h4>
		<div class="content">Returns the derivative of the Kelvin function ber. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> nu</h6>
          <p class="comments">The order of the Kelvin function. </p>
          <h6><code><span title="System.double">double</span></code> x</h6>
          <p class="comments">The value to compute the derivative of the Kelvin function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>the derivative of the Kelvin function ber </p>
      </div>
      
    </div>
	</div>
	<div id="KelvinKe" class="method">
		<h4><span title="System.Numerics.Complex">Complex</span> <strong>KelvinKe</strong>(<span title="System.double">double</span> nu, <span title="System.double">double</span> x)</h4>
		<div class="content">Returns the Kelvin function of the second kind <p>KelvinKe(nu, x) is given by Exp(-nu * pi * j / 2) * BesselK(nu, x * sqrt(j)) where j = sqrt(-1). </p> <p>KelvinKer(nu, x) and KelvinKei(nu, x) are the real and imaginary parts of the KelvinBe(nu, x) </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> nu</h6>
          <p class="comments">The order of the Kelvin function. </p>
          <h6><code><span title="System.double">double</span></code> x</h6>
          <p class="comments">The value to calculate the kelvin function of, </p>
      </div>

      
    </div>
	</div>
	<div id="KelvinKei" class="method">
		<h4><span title="System.double">double</span> <strong>KelvinKei</strong>(<span title="System.double">double</span> x)</h4>
		<div class="content">Returns the Kelvin function kei. <p>KelvinKei(x) is given by the imaginary part of Exp(-nu * pi * j / 2) * BesselK(0, sqrt(j) * x) where j = sqrt(-1). </p> <p>KelvinKei(x) is equivalent to KelvinKei(0, x). </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> x</h6>
          <p class="comments">The non-negative real value to compute the Kelvin function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The Kelvin function kei. </p>
      </div>
      
    </div>
	</div>
	<div id="KelvinKei" class="method">
		<h4><span title="System.double">double</span> <strong>KelvinKei</strong>(<span title="System.double">double</span> nu, <span title="System.double">double</span> x)</h4>
		<div class="content">Returns the Kelvin function kei. <p>KelvinKei(nu, x) is given by the imaginary part of Exp(-nu * pi * j / 2) * BesselK(nu, sqrt(j) * x) where j = sqrt(-1). </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> nu</h6>
          <p class="comments">the order of the the Kelvin function. </p>
          <h6><code><span title="System.double">double</span></code> x</h6>
          <p class="comments">The non-negative real value to compute the Kelvin function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The Kelvin function kei. </p>
      </div>
      
    </div>
	</div>
	<div id="KelvinKeiPrime" class="method">
		<h4><span title="System.double">double</span> <strong>KelvinKeiPrime</strong>(<span title="System.double">double</span> x)</h4>
		<div class="content">Returns the derivative of the Kelvin function kei. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> x</h6>
          <p class="comments">The value to compute the derivative of the Kelvin function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The derivative of the Kelvin function kei. </p>
      </div>
      
    </div>
	</div>
	<div id="KelvinKeiPrime" class="method">
		<h4><span title="System.double">double</span> <strong>KelvinKeiPrime</strong>(<span title="System.double">double</span> nu, <span title="System.double">double</span> x)</h4>
		<div class="content">Returns the derivative of the Kelvin function kei. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> nu</h6>
          <p class="comments">The order of the Kelvin function. </p>
          <h6><code><span title="System.double">double</span></code> x</h6>
          <p class="comments">The value to compute the derivative of the Kelvin function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The derivative of the Kelvin function kei. </p>
      </div>
      
    </div>
	</div>
	<div id="KelvinKer" class="method">
		<h4><span title="System.double">double</span> <strong>KelvinKer</strong>(<span title="System.double">double</span> x)</h4>
		<div class="content">Returns the Kelvin function ker. <p>KelvinKer(x) is given by the real part of Exp(-nu * pi * j / 2) * BesselK(0, sqrt(j) * x) where j = sqrt(-1). </p> <p>KelvinKer(x) is equivalent to KelvinKer(0, x). </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> x</h6>
          <p class="comments">The non-negative real value to compute the Kelvin function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The Kelvin function ker. </p>
      </div>
      
    </div>
	</div>
	<div id="KelvinKer" class="method">
		<h4><span title="System.double">double</span> <strong>KelvinKer</strong>(<span title="System.double">double</span> nu, <span title="System.double">double</span> x)</h4>
		<div class="content">Returns the Kelvin function ker. <p>KelvinKer(nu, x) is given by the real part of Exp(-nu * pi * j / 2) * BesselK(nu, sqrt(j) * x) where j = sqrt(-1). </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> nu</h6>
          <p class="comments">the order of the the Kelvin function. </p>
          <h6><code><span title="System.double">double</span></code> x</h6>
          <p class="comments">The non-negative real value to compute the Kelvin function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The Kelvin function ker. </p>
      </div>
      
    </div>
	</div>
	<div id="KelvinKerPrime" class="method">
		<h4><span title="System.double">double</span> <strong>KelvinKerPrime</strong>(<span title="System.double">double</span> x)</h4>
		<div class="content">Returns the derivative of the Kelvin function ker. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> x</h6>
          <p class="comments">The value to compute the derivative of the Kelvin function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The derivative of the Kelvin function ker. </p>
      </div>
      
    </div>
	</div>
	<div id="KelvinKerPrime" class="method">
		<h4><span title="System.double">double</span> <strong>KelvinKerPrime</strong>(<span title="System.double">double</span> nu, <span title="System.double">double</span> x)</h4>
		<div class="content">Returns the derivative of the Kelvin function ker. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> nu</h6>
          <p class="comments">The order of the Kelvin function. </p>
          <h6><code><span title="System.double">double</span></code> x</h6>
          <p class="comments">The non-negative real value to compute the derivative of the Kelvin function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The derivative of the Kelvin function ker. </p>
      </div>
      
    </div>
	</div>
	<div id="Logistic" class="method">
		<h4><span title="System.double">double</span> <strong>Logistic</strong>(<span title="System.double">double</span> p)</h4>
		<div class="content">Computes the logistic function. see: http://en.wikipedia.org/wiki/Logistic 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> p</h6>
          <p class="comments">The parameter for which to compute the logistic function. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The logistic function of  <var>p</var>. </p>
      </div>
      
    </div>
	</div>
	<div id="Logit" class="method">
		<h4><span title="System.double">double</span> <strong>Logit</strong>(<span title="System.double">double</span> p)</h4>
		<div class="content">Computes the logit function, the inverse of the sigmoid logistic function. see: http://en.wikipedia.org/wiki/Logit 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> p</h6>
          <p class="comments">The parameter for which to compute the logit function. This number should be
between 0 and 1. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The logarithm of  <var>p</var>  divided by 1.0 -  <var>p</var>. </p>
      </div>
      
    </div>
	</div>
	<div id="Multinomial" class="method">
		<h4><span title="System.double">double</span> <strong>Multinomial</strong>(<span title="System.int">int</span> n, <span title="System.Int32[]">Int32[]</span> ni)</h4>
		<div class="content">Computes the multinomial coefficient: n choose n1, n2, n3,... 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.int">int</span></code> n</h6>
          <p class="comments">A nonnegative value n. </p>
          <h6><code><span title="System.Int32[]">Int32[]</span></code> ni</h6>
          <p class="comments">An array of nonnegative values that sum to  <var>n</var>. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The multinomial coefficient. </p>
      </div>
      
    </div>
	</div>
	<div id="RisingFactorial" class="method">
		<h4><span title="System.double">double</span> <strong>RisingFactorial</strong>(<span title="System.double">double</span> x, <span title="System.int">int</span> n)</h4>
		<div class="content">Computes the Rising Factorial (Pochhammer function)  x -> (x)n, n>= 0. see: https://en.wikipedia.org/wiki/Falling_and_rising_factorials 



      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The real value of the Rising Factorial for x and n </p>
      </div>
      
    </div>
	</div>
	<div id="SphericalBesselJ" class="method">
		<h4><span title="System.double">double</span> <strong>SphericalBesselJ</strong>(<span title="System.double">double</span> n, <span title="System.double">double</span> z)</h4>
		<div class="content">Returns the spherical Bessel function of the first kind. <p>SphericalBesselJ(n, z) is given by Sqrt(pi/2) / Sqrt(z) * BesselJ(n + 1/2, z). </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> n</h6>
          <p class="comments">The order of the spherical Bessel function. </p>
          <h6><code><span title="System.double">double</span></code> z</h6>
          <p class="comments">The value to compute the spherical Bessel function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The spherical Bessel function of the first kind. </p>
      </div>
      
    </div>
	</div>
	<div id="SphericalBesselJ" class="method">
		<h4><span title="System.Numerics.Complex">Complex</span> <strong>SphericalBesselJ</strong>(<span title="System.double">double</span> n, <span title="System.Numerics.Complex">Complex</span> z)</h4>
		<div class="content">Returns the spherical Bessel function of the first kind. <p>SphericalBesselJ(n, z) is given by Sqrt(pi/2) / Sqrt(z) * BesselJ(n + 1/2, z). </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> n</h6>
          <p class="comments">The order of the spherical Bessel function. </p>
          <h6><code><span title="System.Numerics.Complex">Complex</span></code> z</h6>
          <p class="comments">The value to compute the spherical Bessel function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.Numerics.Complex">Complex</span></code></h6>
        <p>The spherical Bessel function of the first kind. </p>
      </div>
      
    </div>
	</div>
	<div id="SphericalBesselY" class="method">
		<h4><span title="System.Numerics.Complex">Complex</span> <strong>SphericalBesselY</strong>(<span title="System.double">double</span> n, <span title="System.Numerics.Complex">Complex</span> z)</h4>
		<div class="content">Returns the spherical Bessel function of the second kind. <p>SphericalBesselY(n, z) is given by Sqrt(pi/2) / Sqrt(z) * BesselY(n + 1/2, z). </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> n</h6>
          <p class="comments">The order of the spherical Bessel function. </p>
          <h6><code><span title="System.Numerics.Complex">Complex</span></code> z</h6>
          <p class="comments">The value to compute the spherical Bessel function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.Numerics.Complex">Complex</span></code></h6>
        <p>The spherical Bessel function of the second kind. </p>
      </div>
      
    </div>
	</div>
	<div id="SphericalBesselY" class="method">
		<h4><span title="System.double">double</span> <strong>SphericalBesselY</strong>(<span title="System.double">double</span> n, <span title="System.double">double</span> z)</h4>
		<div class="content">Returns the spherical Bessel function of the second kind. <p>SphericalBesselY(n, z) is given by Sqrt(pi/2) / Sqrt(z) * BesselY(n + 1/2, z). </p> 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> n</h6>
          <p class="comments">The order of the spherical Bessel function. </p>
          <h6><code><span title="System.double">double</span></code> z</h6>
          <p class="comments">The value to compute the spherical Bessel function of. </p>
      </div>

      <div class="return">
        <h5>Return</h5>
        <h6><code><span title="System.double">double</span></code></h6>
        <p>The spherical Bessel function of the second kind. </p>
      </div>
      
    </div>
	</div>
	<div id="StruveL0" class="method">
		<h4><span title="System.double">double</span> <strong>StruveL0</strong>(<span title="System.double">double</span> x)</h4>
		<div class="content">Returns the modified Struve function of order 0. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> x</h6>
          <p class="comments">The value to compute the function of. </p>
      </div>

      
    </div>
	</div>
	<div id="StruveL1" class="method">
		<h4><span title="System.double">double</span> <strong>StruveL1</strong>(<span title="System.double">double</span> x)</h4>
		<div class="content">Returns the modified Struve function of order 1. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> x</h6>
          <p class="comments">The value to compute the function of. </p>
      </div>

      
    </div>
	</div>

	
	<div id="footer">
  <p>Based on v5.0.0.0 of MathNet.Numerics (Math.NET Numerics)</p>
  <p>Generated by <a href="http://docu.jagregory.com">docu</a></p>
</div>
  </body>
</html>