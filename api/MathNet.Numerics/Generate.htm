<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <title>Generate - Math.NET Numerics Documentation</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <link type="text/css" rel="stylesheet" href="../main.css"/>
    <script type="text/javascript" src="../js/jquery-1.3.2.min.js"></script>
    <script type="text/javascript" src="../js/jquery.scrollTo-min.js"></script>
    <script type="text/javascript" src="../js/navigation.js"></script>
    <script type="text/javascript" src="../js/example.js"></script>
  </head>
  <body><div id="namespaces">
	<h2 class="fixed">Namespaces</h2>
	<div class="scroll">
		<ul>
			<li>
          <a href="../MathNet.Numerics/index.htm" class="current">MathNet.Numerics</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Differentiation/index.htm">MathNet.Numerics.Differentiation</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Distributions/index.htm">MathNet.Numerics.Distributions</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Financial/index.htm">MathNet.Numerics.Financial</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.IntegralTransforms/index.htm">MathNet.Numerics.IntegralTransforms</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Integration/index.htm">MathNet.Numerics.Integration</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Interpolation/index.htm">MathNet.Numerics.Interpolation</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra/index.htm">MathNet.Numerics.LinearAlgebra</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Complex/index.htm">MathNet.Numerics.LinearAlgebra.Complex</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Complex.Solvers/index.htm">MathNet.Numerics.LinearAlgebra.Complex.Solvers</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Complex32/index.htm">MathNet.Numerics.LinearAlgebra.Complex32</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Complex32.Solvers/index.htm">MathNet.Numerics.LinearAlgebra.Complex32.Solvers</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Double/index.htm">MathNet.Numerics.LinearAlgebra.Double</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Double.Solvers/index.htm">MathNet.Numerics.LinearAlgebra.Double.Solvers</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Factorization/index.htm">MathNet.Numerics.LinearAlgebra.Factorization</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Single/index.htm">MathNet.Numerics.LinearAlgebra.Single</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Single.Solvers/index.htm">MathNet.Numerics.LinearAlgebra.Single.Solvers</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Solvers/index.htm">MathNet.Numerics.LinearAlgebra.Solvers</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearAlgebra.Storage/index.htm">MathNet.Numerics.LinearAlgebra.Storage</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.LinearRegression/index.htm">MathNet.Numerics.LinearRegression</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.OdeSolvers/index.htm">MathNet.Numerics.OdeSolvers</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Optimization/index.htm">MathNet.Numerics.Optimization</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Optimization.LineSearch/index.htm">MathNet.Numerics.Optimization.LineSearch</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Optimization.ObjectiveFunctions/index.htm">MathNet.Numerics.Optimization.ObjectiveFunctions</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Optimization.TrustRegion/index.htm">MathNet.Numerics.Optimization.TrustRegion</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Providers.Common.Cuda/index.htm">MathNet.Numerics.Providers.Common.Cuda</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Providers.Common.Mkl/index.htm">MathNet.Numerics.Providers.Common.Mkl</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Providers.Common.OpenBlas/index.htm">MathNet.Numerics.Providers.Common.OpenBlas</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Providers.FourierTransform/index.htm">MathNet.Numerics.Providers.FourierTransform</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Providers.LinearAlgebra/index.htm">MathNet.Numerics.Providers.LinearAlgebra</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Providers.LinearAlgebra.OpenBlas/index.htm">MathNet.Numerics.Providers.LinearAlgebra.OpenBlas</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Providers.SparseSolver/index.htm">MathNet.Numerics.Providers.SparseSolver</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Random/index.htm">MathNet.Numerics.Random</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.RootFinding/index.htm">MathNet.Numerics.RootFinding</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Statistics/index.htm">MathNet.Numerics.Statistics</a>
      </li>
			<li>
          <a href="../MathNet.Numerics.Statistics.Mcmc/index.htm">MathNet.Numerics.Statistics.Mcmc</a>
      </li>
		</ul>
	</div>
</div><div id="types">
  <h2 class="fixed">Types in MathNet.Numerics</h2>
	<div class="scroll">
		<ul>
				<li>
            <a href="../MathNet.Numerics/AppSwitches.htm">AppSwitches</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/Combinatorics.htm">Combinatorics</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/Complex32.htm">Complex32</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/ComplexExtensions.htm">ComplexExtensions</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/Constants.htm">Constants</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/ContourIntegrate.htm">ContourIntegrate</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/Control.htm">Control</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/Differentiate.htm">Differentiate</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/DifferIntegrate.htm">DifferIntegrate</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/Distance.htm">Distance</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/Euclid.htm">Euclid</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/Evaluate.htm">Evaluate</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/ExcelFunctions.htm">ExcelFunctions</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/FindMinimum.htm">FindMinimum</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/FindRoots.htm">FindRoots</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/Fit.htm">Fit</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/Generate.htm" class="current">Generate</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/GoodnessOfFit.htm">GoodnessOfFit</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/Integrate.htm">Integrate</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/Interpolate.htm">Interpolate</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/InvalidParameterException.htm">InvalidParameterException</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/IPrecisionSupport`1.htm">IPrecisionSupport&lt;T&gt;</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/MemoryAllocationException.htm">MemoryAllocationException</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/NativeInterfaceException.htm">NativeInterfaceException</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/NonConvergenceException.htm">NonConvergenceException</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/NumericalBreakdownException.htm">NumericalBreakdownException</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/Permutation.htm">Permutation</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/Polynomial.htm">Polynomial</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/Precision.htm">Precision</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/SingularUMatrixException.htm">SingularUMatrixException</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/Sorting.htm">Sorting</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/SpecialFunctions.htm">SpecialFunctions</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/TestFunctions.htm">TestFunctions</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/Trig.htm">Trig</a>
        </li>
				<li>
            <a href="../MathNet.Numerics/Window.htm">Window</a>
        </li>
		</ul>
	</div>
</div>
    <div class="header">
		<p class="class"><strong>Type</strong> Generate</p>
		<p><strong>Namespace</strong> MathNet.Numerics</p>
	</div>
    <div class="sub-header">
		

			<h3 class="section">Static Functions</h3>
			<ul>
				<li><a href="../MathNet.Numerics/Generate.htm#Fibonacci">Fibonacci</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#FibonacciSequence">FibonacciSequence</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#Impulse">Impulse</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#ImpulseSequence">ImpulseSequence</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#LinearRange">LinearRange</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#LinearRange">LinearRange</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#LinearRange">LinearRange</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#LinearRangeInt32">LinearRangeInt32</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#LinearRangeInt32">LinearRangeInt32</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#LinearRangeMap``1">LinearRangeMap&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#LinearSpaced">LinearSpaced</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#LinearSpacedMap``1">LinearSpacedMap&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#LogSpaced">LogSpaced</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#LogSpacedMap``1">LogSpacedMap&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#Map``2">Map&lt;TA, T&gt;</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#Map2``3">Map2&lt;TA, TB, T&gt;</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#Map2Sequence``3">Map2Sequence&lt;TA, TB, T&gt;</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#MapSequence``2">MapSequence&lt;TA, T&gt;</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#Normal">Normal</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#NormalSequence">NormalSequence</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#Periodic">Periodic</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#PeriodicImpulse">PeriodicImpulse</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#PeriodicImpulseSequence">PeriodicImpulseSequence</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#PeriodicMap``1">PeriodicMap&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#PeriodicMapSequence``1">PeriodicMapSequence&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#PeriodicSequence">PeriodicSequence</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#Random">Random</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#Random">Random</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#RandomComplex">RandomComplex</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#RandomComplex">RandomComplex</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#RandomComplex32">RandomComplex32</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#RandomComplex32">RandomComplex32</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#RandomMap``1">RandomMap&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#RandomMap2``1">RandomMap2&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#RandomMap2Sequence``1">RandomMap2Sequence&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#RandomMapSequence``1">RandomMapSequence&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#RandomSingle">RandomSingle</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#RandomSingle">RandomSingle</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#Repeat``1">Repeat&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#RepeatSequence``1">RepeatSequence&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#Sawtooth">Sawtooth</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#SawtoothSequence">SawtoothSequence</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#Sinusoidal">Sinusoidal</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#SinusoidalSequence">SinusoidalSequence</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#Square">Square</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#SquareSequence">SquareSequence</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#Standard">Standard</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#StandardSequence">StandardSequence</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#Step">Step</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#StepSequence">StepSequence</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#Triangle">Triangle</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#TriangleSequence">TriangleSequence</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#Unfold``2">Unfold&lt;T, TState&gt;</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#UnfoldSequence``2">UnfoldSequence&lt;T, TState&gt;</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#Uniform">Uniform</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#UniformMap``1">UniformMap&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#UniformMap2``1">UniformMap2&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#UniformMap2Sequence``1">UniformMap2Sequence&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#UniformMapSequence``1">UniformMapSequence&lt;T&gt;</a></li>
				<li><a href="../MathNet.Numerics/Generate.htm#UniformSequence">UniformSequence</a></li>
			</ul>
		

		
	</div>
	
	
	
	<h3 class="section">Public Static Functions</h3>
	
	<div id="Fibonacci" class="method">
		<h4><span title="System.Numerics.BigInteger[]">BigInteger[]</span> <strong>Fibonacci</strong>(<span title="System.int">int</span> length)</h4>
		<div class="content">Generate a Fibonacci sequence, including zero as first value. 



      
    </div>
	</div>
	<div id="FibonacciSequence" class="method">
		<h4><span title="System.Collections.Generic.IEnumerable<BigInteger>">IEnumerable&lt;BigInteger&gt;</span> <strong>FibonacciSequence</strong>()</h4>
		<div class="content">Generate an infinite Fibonacci sequence, including zero as first value. 



      
    </div>
	</div>
	<div id="Impulse" class="method">
		<h4><span title="System.Double[]">Double[]</span> <strong>Impulse</strong>(<span title="System.int">int</span> length, <span title="System.double">double</span> amplitude, <span title="System.int">int</span> delay)</h4>
		<div class="content">Create a Kronecker Delta impulse sample vector. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.int">int</span></code> length</h6>
          <p class="comments">The number of samples to generate. </p>
          <h6><code><span title="System.double">double</span></code> amplitude</h6>
          <p class="comments">The maximal reached peak. </p>
          <h6><code><span title="System.int">int</span></code> delay</h6>
          <p class="comments">Offset to the time axis. Zero or positive. </p>
      </div>

      
    </div>
	</div>
	<div id="ImpulseSequence" class="method">
		<h4><span title="System.Collections.Generic.IEnumerable<double>">IEnumerable&lt;double&gt;</span> <strong>ImpulseSequence</strong>(<span title="System.double">double</span> amplitude, <span title="System.int">int</span> delay)</h4>
		<div class="content">Create a Kronecker Delta impulse sample vector. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> amplitude</h6>
          <p class="comments">The maximal reached peak. </p>
          <h6><code><span title="System.int">int</span></code> delay</h6>
          <p class="comments">Offset to the time axis, hence the sample index of the impulse. </p>
      </div>

      
    </div>
	</div>
	<div id="LinearRange" class="method">
		<h4><span title="System.Double[]">Double[]</span> <strong>LinearRange</strong>(<span title="System.int">int</span> start, <span title="System.int">int</span> step, <span title="System.int">int</span> stop)</h4>
		<div class="content">Generate a linearly spaced sample vector within the inclusive interval (start, stop) and the provided step.
The start value is aways included as first value, but stop is only included if it stop-start is a multiple of step.
Equivalent to MATLAB double colon operator (::). 



      
    </div>
	</div>
	<div id="LinearRange" class="method">
		<h4><span title="System.Double[]">Double[]</span> <strong>LinearRange</strong>(<span title="System.double">double</span> start, <span title="System.double">double</span> step, <span title="System.double">double</span> stop)</h4>
		<div class="content">Generate a linearly spaced sample vector within the inclusive interval (start, stop) and the provide step.
The start value is aways included as first value, but stop is only included if it stop-start is a multiple of step.
Equivalent to MATLAB double colon operator (::). 



      
    </div>
	</div>
	<div id="LinearRange" class="method">
		<h4><span title="System.Double[]">Double[]</span> <strong>LinearRange</strong>(<span title="System.int">int</span> start, <span title="System.int">int</span> stop)</h4>
		<div class="content">Generate a linearly spaced sample vector within the inclusive interval (start, stop) and step 1.
Equivalent to MATLAB colon operator (:). 



      
    </div>
	</div>
	<div id="LinearRangeInt32" class="method">
		<h4><span title="System.Int32[]">Int32[]</span> <strong>LinearRangeInt32</strong>(<span title="System.int">int</span> start, <span title="System.int">int</span> stop)</h4>
		<div class="content">Generate a linearly spaced sample vector within the inclusive interval (start, stop) and step 1.
Equivalent to MATLAB colon operator (:). 



      
    </div>
	</div>
	<div id="LinearRangeInt32" class="method">
		<h4><span title="System.Int32[]">Int32[]</span> <strong>LinearRangeInt32</strong>(<span title="System.int">int</span> start, <span title="System.int">int</span> step, <span title="System.int">int</span> stop)</h4>
		<div class="content">Generate a linearly spaced sample vector within the inclusive interval (start, stop) and the provided step.
The start value is aways included as first value, but stop is only included if it stop-start is a multiple of step.
Equivalent to MATLAB double colon operator (::). 



      
    </div>
	</div>
	<div id="LinearRangeMap``1" class="method">
		<h4><span title="MathNet.Numerics.T[]">T[]</span> <strong>LinearRangeMap&lt;T&gt;</strong>(<span title="System.double">double</span> start, <span title="System.double">double</span> step, <span title="System.double">double</span> stop, <span title="System.Func<double, T>">Func&lt;double, T&gt;</span> map)</h4>
		<div class="content">Generate samples by sampling a function at linearly spaced points within the inclusive interval (start, stop) and the provide step.
The start value is aways included as first value, but stop is only included if it stop-start is a multiple of step. 



      
    </div>
	</div>
	<div id="LinearSpaced" class="method">
		<h4><span title="System.Double[]">Double[]</span> <strong>LinearSpaced</strong>(<span title="System.int">int</span> length, <span title="System.double">double</span> start, <span title="System.double">double</span> stop)</h4>
		<div class="content">Generate a linearly spaced sample vector of the given length between the specified values (inclusive).
Equivalent to MATLAB linspace but with the length as first instead of last argument. 



      
    </div>
	</div>
	<div id="LinearSpacedMap``1" class="method">
		<h4><span title="MathNet.Numerics.T[]">T[]</span> <strong>LinearSpacedMap&lt;T&gt;</strong>(<span title="System.int">int</span> length, <span title="System.double">double</span> start, <span title="System.double">double</span> stop, <span title="System.Func<double, T>">Func&lt;double, T&gt;</span> map)</h4>
		<div class="content">Generate samples by sampling a function at linearly spaced points between the specified values (inclusive). 



      
    </div>
	</div>
	<div id="LogSpaced" class="method">
		<h4><span title="System.Double[]">Double[]</span> <strong>LogSpaced</strong>(<span title="System.int">int</span> length, <span title="System.double">double</span> startExponent, <span title="System.double">double</span> stopExponent)</h4>
		<div class="content">Generate a base 10 logarithmically spaced sample vector of the given length between the specified decade exponents (inclusive).
Equivalent to MATLAB logspace but with the length as first instead of last argument. 



      
    </div>
	</div>
	<div id="LogSpacedMap``1" class="method">
		<h4><span title="MathNet.Numerics.T[]">T[]</span> <strong>LogSpacedMap&lt;T&gt;</strong>(<span title="System.int">int</span> length, <span title="System.double">double</span> startExponent, <span title="System.double">double</span> stopExponent, <span title="System.Func<double, T>">Func&lt;double, T&gt;</span> map)</h4>
		<div class="content">Generate samples by sampling a function at base 10 logarithmically spaced points between the specified decade exponents (inclusive). 



      
    </div>
	</div>
	<div id="Map``2" class="method">
		<h4><span title="MathNet.Numerics.T[]">T[]</span> <strong>Map&lt;TA, T&gt;</strong>(<span title="MathNet.Numerics.TA[]">TA[]</span> points, <span title="System.Func<TA, T>">Func&lt;TA, T&gt;</span> map)</h4>
		<div class="content">Generate samples by sampling a function at the provided points. 



      
    </div>
	</div>
	<div id="Map2``3" class="method">
		<h4><span title="MathNet.Numerics.T[]">T[]</span> <strong>Map2&lt;TA, TB, T&gt;</strong>(<span title="MathNet.Numerics.TA[]">TA[]</span> pointsA, <span title="MathNet.Numerics.TB[]">TB[]</span> pointsB, <span title="System.Func<TA, TB, T>">Func&lt;TA, TB, T&gt;</span> map)</h4>
		<div class="content">Generate samples by sampling a function at the provided points. 



      
    </div>
	</div>
	<div id="Map2Sequence``3" class="method">
		<h4><span title="System.Collections.Generic.IEnumerable<T>">IEnumerable&lt;T&gt;</span> <strong>Map2Sequence&lt;TA, TB, T&gt;</strong>(<span title="System.Collections.Generic.IEnumerable<TA>">IEnumerable&lt;TA&gt;</span> pointsA, <span title="System.Collections.Generic.IEnumerable<TB>">IEnumerable&lt;TB&gt;</span> pointsB, <span title="System.Func<TA, TB, T>">Func&lt;TA, TB, T&gt;</span> map)</h4>
		<div class="content">Generate a sample sequence by sampling a function at the provided point sequence. 



      
    </div>
	</div>
	<div id="MapSequence``2" class="method">
		<h4><span title="System.Collections.Generic.IEnumerable<T>">IEnumerable&lt;T&gt;</span> <strong>MapSequence&lt;TA, T&gt;</strong>(<span title="System.Collections.Generic.IEnumerable<TA>">IEnumerable&lt;TA&gt;</span> points, <span title="System.Func<TA, T>">Func&lt;TA, T&gt;</span> map)</h4>
		<div class="content">Generate a sample sequence by sampling a function at the provided point sequence. 



      
    </div>
	</div>
	<div id="Normal" class="method">
		<h4><span title="System.Double[]">Double[]</span> <strong>Normal</strong>(<span title="System.int">int</span> length, <span title="System.double">double</span> mean, <span title="System.double">double</span> standardDeviation)</h4>
		<div class="content">Create samples with independent amplitudes of normal distribution and a flat spectral density. 



      
    </div>
	</div>
	<div id="NormalSequence" class="method">
		<h4><span title="System.Collections.Generic.IEnumerable<double>">IEnumerable&lt;double&gt;</span> <strong>NormalSequence</strong>(<span title="System.double">double</span> mean, <span title="System.double">double</span> standardDeviation)</h4>
		<div class="content">Create an infinite sample sequence with independent amplitudes of normal distribution and a flat spectral density. 



      
    </div>
	</div>
	<div id="Periodic" class="method">
		<h4><span title="System.Double[]">Double[]</span> <strong>Periodic</strong>(<span title="System.int">int</span> length, <span title="System.double">double</span> samplingRate, <span title="System.double">double</span> frequency, <span title="System.double">double</span> amplitude, <span title="System.double">double</span> phase, <span title="System.int">int</span> delay)</h4>
		<div class="content">Create a periodic wave. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.int">int</span></code> length</h6>
          <p class="comments">The number of samples to generate. </p>
          <h6><code><span title="System.double">double</span></code> samplingRate</h6>
          <p class="comments">Samples per time unit (Hz). Must be larger than twice the frequency to satisfy the Nyquist criterion. </p>
          <h6><code><span title="System.double">double</span></code> frequency</h6>
          <p class="comments">Frequency in periods per time unit (Hz). </p>
          <h6><code><span title="System.double">double</span></code> amplitude</h6>
          <p class="comments">The length of the period when sampled at one sample per time unit. This is the interval of the periodic domain, a typical value is 1.0, or 2*Pi for angular functions. </p>
          <h6><code><span title="System.double">double</span></code> phase</h6>
          <p class="comments">Optional phase offset. </p>
          <h6><code><span title="System.int">int</span></code> delay</h6>
          <p class="comments">Optional delay, relative to the phase. </p>
      </div>

      
    </div>
	</div>
	<div id="PeriodicImpulse" class="method">
		<h4><span title="System.Double[]">Double[]</span> <strong>PeriodicImpulse</strong>(<span title="System.int">int</span> length, <span title="System.int">int</span> period, <span title="System.double">double</span> amplitude, <span title="System.int">int</span> delay)</h4>
		<div class="content">Create a periodic Kronecker Delta impulse sample vector. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.int">int</span></code> length</h6>
          <p class="comments">The number of samples to generate. </p>
          <h6><code><span title="System.int">int</span></code> period</h6>
          <p class="comments">impulse sequence period. </p>
          <h6><code><span title="System.double">double</span></code> amplitude</h6>
          <p class="comments">The maximal reached peak. </p>
          <h6><code><span title="System.int">int</span></code> delay</h6>
          <p class="comments">Offset to the time axis. Zero or positive. </p>
      </div>

      
    </div>
	</div>
	<div id="PeriodicImpulseSequence" class="method">
		<h4><span title="System.Collections.Generic.IEnumerable<double>">IEnumerable&lt;double&gt;</span> <strong>PeriodicImpulseSequence</strong>(<span title="System.int">int</span> period, <span title="System.double">double</span> amplitude, <span title="System.int">int</span> delay)</h4>
		<div class="content">Create a Kronecker Delta impulse sample vector. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.int">int</span></code> period</h6>
          <p class="comments">impulse sequence period. </p>
          <h6><code><span title="System.double">double</span></code> amplitude</h6>
          <p class="comments">The maximal reached peak. </p>
          <h6><code><span title="System.int">int</span></code> delay</h6>
          <p class="comments">Offset to the time axis. Zero or positive. </p>
      </div>

      
    </div>
	</div>
	<div id="PeriodicMap``1" class="method">
		<h4><span title="MathNet.Numerics.T[]">T[]</span> <strong>PeriodicMap&lt;T&gt;</strong>(<span title="System.int">int</span> length, <span title="System.Func<double, T>">Func&lt;double, T&gt;</span> map, <span title="System.double">double</span> samplingRate, <span title="System.double">double</span> frequency, <span title="System.double">double</span> amplitude, <span title="System.double">double</span> phase, <span title="System.int">int</span> delay)</h4>
		<div class="content">Create a periodic wave. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.int">int</span></code> length</h6>
          <p class="comments">The number of samples to generate. </p>
          <h6><code><span title="System.Func<double, T>">Func&lt;double, T&gt;</span></code> map</h6>
          <p class="comments">The function to apply to each of the values and evaluate the resulting sample. </p>
          <h6><code><span title="System.double">double</span></code> samplingRate</h6>
          <p class="comments">Samples per time unit (Hz). Must be larger than twice the frequency to satisfy the Nyquist criterion. </p>
          <h6><code><span title="System.double">double</span></code> frequency</h6>
          <p class="comments">Frequency in periods per time unit (Hz). </p>
          <h6><code><span title="System.double">double</span></code> amplitude</h6>
          <p class="comments">The length of the period when sampled at one sample per time unit. This is the interval of the periodic domain, a typical value is 1.0, or 2*Pi for angular functions. </p>
          <h6><code><span title="System.double">double</span></code> phase</h6>
          <p class="comments">Optional phase offset. </p>
          <h6><code><span title="System.int">int</span></code> delay</h6>
          <p class="comments">Optional delay, relative to the phase. </p>
      </div>

      
    </div>
	</div>
	<div id="PeriodicMapSequence``1" class="method">
		<h4><span title="System.Collections.Generic.IEnumerable<T>">IEnumerable&lt;T&gt;</span> <strong>PeriodicMapSequence&lt;T&gt;</strong>(<span title="System.Func<double, T>">Func&lt;double, T&gt;</span> map, <span title="System.double">double</span> samplingRate, <span title="System.double">double</span> frequency, <span title="System.double">double</span> amplitude, <span title="System.double">double</span> phase, <span title="System.int">int</span> delay)</h4>
		<div class="content">Create an infinite periodic wave sequence. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.Func<double, T>">Func&lt;double, T&gt;</span></code> map</h6>
          <p class="comments">The function to apply to each of the values and evaluate the resulting sample. </p>
          <h6><code><span title="System.double">double</span></code> samplingRate</h6>
          <p class="comments">Samples per time unit (Hz). Must be larger than twice the frequency to satisfy the Nyquist criterion. </p>
          <h6><code><span title="System.double">double</span></code> frequency</h6>
          <p class="comments">Frequency in periods per time unit (Hz). </p>
          <h6><code><span title="System.double">double</span></code> amplitude</h6>
          <p class="comments">The length of the period when sampled at one sample per time unit. This is the interval of the periodic domain, a typical value is 1.0, or 2*Pi for angular functions. </p>
          <h6><code><span title="System.double">double</span></code> phase</h6>
          <p class="comments">Optional phase offset. </p>
          <h6><code><span title="System.int">int</span></code> delay</h6>
          <p class="comments">Optional delay, relative to the phase. </p>
      </div>

      
    </div>
	</div>
	<div id="PeriodicSequence" class="method">
		<h4><span title="System.Collections.Generic.IEnumerable<double>">IEnumerable&lt;double&gt;</span> <strong>PeriodicSequence</strong>(<span title="System.double">double</span> samplingRate, <span title="System.double">double</span> frequency, <span title="System.double">double</span> amplitude, <span title="System.double">double</span> phase, <span title="System.int">int</span> delay)</h4>
		<div class="content">Create an infinite periodic wave sequence. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> samplingRate</h6>
          <p class="comments">Samples per time unit (Hz). Must be larger than twice the frequency to satisfy the Nyquist criterion. </p>
          <h6><code><span title="System.double">double</span></code> frequency</h6>
          <p class="comments">Frequency in periods per time unit (Hz). </p>
          <h6><code><span title="System.double">double</span></code> amplitude</h6>
          <p class="comments">The length of the period when sampled at one sample per time unit. This is the interval of the periodic domain, a typical value is 1.0, or 2*Pi for angular functions. </p>
          <h6><code><span title="System.double">double</span></code> phase</h6>
          <p class="comments">Optional phase offset. </p>
          <h6><code><span title="System.int">int</span></code> delay</h6>
          <p class="comments">Optional delay, relative to the phase. </p>
      </div>

      
    </div>
	</div>
	<div id="Random" class="method">
		<h4><span title="System.Collections.Generic.IEnumerable<double>">IEnumerable&lt;double&gt;</span> <strong>Random</strong>(<a href="../MathNet.Numerics.Distributions/IContinuousDistribution.htm">IContinuousDistribution</a> distribution)</h4>
		<div class="content">Create an infinite random sample sequence. 



      
    </div>
	</div>
	<div id="Random" class="method">
		<h4><span title="System.Double[]">Double[]</span> <strong>Random</strong>(<span title="System.int">int</span> length, <a href="../MathNet.Numerics.Distributions/IContinuousDistribution.htm">IContinuousDistribution</a> distribution)</h4>
		<div class="content">Create random samples. 



      
    </div>
	</div>
	<div id="RandomComplex" class="method">
		<h4><span title="System.Numerics.Complex[]">Complex[]</span> <strong>RandomComplex</strong>(<span title="System.int">int</span> length, <a href="../MathNet.Numerics.Distributions/IContinuousDistribution.htm">IContinuousDistribution</a> distribution)</h4>
		<div class="content">Create random samples. 



      
    </div>
	</div>
	<div id="RandomComplex" class="method">
		<h4><span title="System.Collections.Generic.IEnumerable<Complex>">IEnumerable&lt;Complex&gt;</span> <strong>RandomComplex</strong>(<a href="../MathNet.Numerics.Distributions/IContinuousDistribution.htm">IContinuousDistribution</a> distribution)</h4>
		<div class="content">Create an infinite random sample sequence. 



      
    </div>
	</div>
	<div id="RandomComplex32" class="method">
		<h4><span title="System.Collections.Generic.IEnumerable<Complex32>">IEnumerable&lt;Complex32&gt;</span> <strong>RandomComplex32</strong>(<a href="../MathNet.Numerics.Distributions/IContinuousDistribution.htm">IContinuousDistribution</a> distribution)</h4>
		<div class="content">Create an infinite random sample sequence. 



      
    </div>
	</div>
	<div id="RandomComplex32" class="method">
		<h4><span title="MathNet.Numerics.Complex32[]">Complex32[]</span> <strong>RandomComplex32</strong>(<span title="System.int">int</span> length, <a href="../MathNet.Numerics.Distributions/IContinuousDistribution.htm">IContinuousDistribution</a> distribution)</h4>
		<div class="content">Create random samples. 



      
    </div>
	</div>
	<div id="RandomMap``1" class="method">
		<h4><span title="MathNet.Numerics.T[]">T[]</span> <strong>RandomMap&lt;T&gt;</strong>(<span title="System.int">int</span> length, <a href="../MathNet.Numerics.Distributions/IContinuousDistribution.htm">IContinuousDistribution</a> distribution, <span title="System.Func<double, T>">Func&lt;double, T&gt;</span> map)</h4>
		<div class="content">Generate samples by sampling a function at samples from a probability distribution. 



      
    </div>
	</div>
	<div id="RandomMap2``1" class="method">
		<h4><span title="MathNet.Numerics.T[]">T[]</span> <strong>RandomMap2&lt;T&gt;</strong>(<span title="System.int">int</span> length, <a href="../MathNet.Numerics.Distributions/IContinuousDistribution.htm">IContinuousDistribution</a> distribution, <span title="System.Func<double, double, T>">Func&lt;double, double, T&gt;</span> map)</h4>
		<div class="content">Generate samples by sampling a function at sample pairs from a probability distribution. 



      
    </div>
	</div>
	<div id="RandomMap2Sequence``1" class="method">
		<h4><span title="System.Collections.Generic.IEnumerable<T>">IEnumerable&lt;T&gt;</span> <strong>RandomMap2Sequence&lt;T&gt;</strong>(<a href="../MathNet.Numerics.Distributions/IContinuousDistribution.htm">IContinuousDistribution</a> distribution, <span title="System.Func<double, double, T>">Func&lt;double, double, T&gt;</span> map)</h4>
		<div class="content">Generate a sample sequence by sampling a function at sample pairs from a probability distribution. 



      
    </div>
	</div>
	<div id="RandomMapSequence``1" class="method">
		<h4><span title="System.Collections.Generic.IEnumerable<T>">IEnumerable&lt;T&gt;</span> <strong>RandomMapSequence&lt;T&gt;</strong>(<a href="../MathNet.Numerics.Distributions/IContinuousDistribution.htm">IContinuousDistribution</a> distribution, <span title="System.Func<double, T>">Func&lt;double, T&gt;</span> map)</h4>
		<div class="content">Generate a sample sequence by sampling a function at samples from a probability distribution. 



      
    </div>
	</div>
	<div id="RandomSingle" class="method">
		<h4><span title="System.Single[]">Single[]</span> <strong>RandomSingle</strong>(<span title="System.int">int</span> length, <a href="../MathNet.Numerics.Distributions/IContinuousDistribution.htm">IContinuousDistribution</a> distribution)</h4>
		<div class="content">Create random samples. 



      
    </div>
	</div>
	<div id="RandomSingle" class="method">
		<h4><span title="System.Collections.Generic.IEnumerable<float>">IEnumerable&lt;float&gt;</span> <strong>RandomSingle</strong>(<a href="../MathNet.Numerics.Distributions/IContinuousDistribution.htm">IContinuousDistribution</a> distribution)</h4>
		<div class="content">Create an infinite random sample sequence. 



      
    </div>
	</div>
	<div id="Repeat``1" class="method">
		<h4><span title="MathNet.Numerics.T[]">T[]</span> <strong>Repeat&lt;T&gt;</strong>(<span title="System.int">int</span> length, <span title="MathNet.Numerics.T">T</span> value)</h4>
		<div class="content">Create an array with each field set to the same value. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.int">int</span></code> length</h6>
          <p class="comments">The number of samples to generate. </p>
          <h6><code><span title="MathNet.Numerics.T">T</span></code> value</h6>
          <p class="comments">The value that each field should be set to. </p>
      </div>

      
    </div>
	</div>
	<div id="RepeatSequence``1" class="method">
		<h4><span title="System.Collections.Generic.IEnumerable<T>">IEnumerable&lt;T&gt;</span> <strong>RepeatSequence&lt;T&gt;</strong>(<span title="MathNet.Numerics.T">T</span> value)</h4>
		<div class="content">Create an infinite sequence where each element has the same value. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="MathNet.Numerics.T">T</span></code> value</h6>
          <p class="comments">The value that each element should be set to. </p>
      </div>

      
    </div>
	</div>
	<div id="Sawtooth" class="method">
		<h4><span title="System.Double[]">Double[]</span> <strong>Sawtooth</strong>(<span title="System.int">int</span> length, <span title="System.int">int</span> period, <span title="System.double">double</span> lowValue, <span title="System.double">double</span> highValue, <span title="System.int">int</span> delay)</h4>
		<div class="content">Create a periodic sawtooth wave, starting with the lowest sample. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.int">int</span></code> length</h6>
          <p class="comments">The number of samples to generate. </p>
          <h6><code><span title="System.int">int</span></code> period</h6>
          <p class="comments">Number of samples a full sawtooth period. </p>
          <h6><code><span title="System.double">double</span></code> lowValue</h6>
          <p class="comments">Lowest sample value. </p>
          <h6><code><span title="System.double">double</span></code> highValue</h6>
          <p class="comments">Highest sample value. </p>
          <h6><code><span title="System.int">int</span></code> delay</h6>
          <p class="comments">Optional delay. </p>
      </div>

      
    </div>
	</div>
	<div id="SawtoothSequence" class="method">
		<h4><span title="System.Collections.Generic.IEnumerable<double>">IEnumerable&lt;double&gt;</span> <strong>SawtoothSequence</strong>(<span title="System.int">int</span> period, <span title="System.double">double</span> lowValue, <span title="System.double">double</span> highValue, <span title="System.int">int</span> delay)</h4>
		<div class="content">Create an infinite periodic sawtooth wave sequence, starting with the lowest sample. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.int">int</span></code> period</h6>
          <p class="comments">Number of samples a full sawtooth period. </p>
          <h6><code><span title="System.double">double</span></code> lowValue</h6>
          <p class="comments">Lowest sample value. </p>
          <h6><code><span title="System.double">double</span></code> highValue</h6>
          <p class="comments">Highest sample value. </p>
          <h6><code><span title="System.int">int</span></code> delay</h6>
          <p class="comments">Optional delay. </p>
      </div>

      
    </div>
	</div>
	<div id="Sinusoidal" class="method">
		<h4><span title="System.Double[]">Double[]</span> <strong>Sinusoidal</strong>(<span title="System.int">int</span> length, <span title="System.double">double</span> samplingRate, <span title="System.double">double</span> frequency, <span title="System.double">double</span> amplitude, <span title="System.double">double</span> mean, <span title="System.double">double</span> phase, <span title="System.int">int</span> delay)</h4>
		<div class="content">Create a Sine wave. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.int">int</span></code> length</h6>
          <p class="comments">The number of samples to generate. </p>
          <h6><code><span title="System.double">double</span></code> samplingRate</h6>
          <p class="comments">Samples per time unit (Hz). Must be larger than twice the frequency to satisfy the Nyquist criterion. </p>
          <h6><code><span title="System.double">double</span></code> frequency</h6>
          <p class="comments">Frequency in periods per time unit (Hz). </p>
          <h6><code><span title="System.double">double</span></code> amplitude</h6>
          <p class="comments">The maximal reached peak. </p>
          <h6><code><span title="System.double">double</span></code> mean</h6>
          <p class="comments">The mean, or DC part, of the signal. </p>
          <h6><code><span title="System.double">double</span></code> phase</h6>
          <p class="comments">Optional phase offset. </p>
          <h6><code><span title="System.int">int</span></code> delay</h6>
          <p class="comments">Optional delay, relative to the phase. </p>
      </div>

      
    </div>
	</div>
	<div id="SinusoidalSequence" class="method">
		<h4><span title="System.Collections.Generic.IEnumerable<double>">IEnumerable&lt;double&gt;</span> <strong>SinusoidalSequence</strong>(<span title="System.double">double</span> samplingRate, <span title="System.double">double</span> frequency, <span title="System.double">double</span> amplitude, <span title="System.double">double</span> mean, <span title="System.double">double</span> phase, <span title="System.int">int</span> delay)</h4>
		<div class="content">Create an infinite Sine wave sequence. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> samplingRate</h6>
          <p class="comments">Samples per unit. </p>
          <h6><code><span title="System.double">double</span></code> frequency</h6>
          <p class="comments">Frequency in samples per unit. </p>
          <h6><code><span title="System.double">double</span></code> amplitude</h6>
          <p class="comments">The maximal reached peak. </p>
          <h6><code><span title="System.double">double</span></code> mean</h6>
          <p class="comments">The mean, or DC part, of the signal. </p>
          <h6><code><span title="System.double">double</span></code> phase</h6>
          <p class="comments">Optional phase offset. </p>
          <h6><code><span title="System.int">int</span></code> delay</h6>
          <p class="comments">Optional delay, relative to the phase. </p>
      </div>

      
    </div>
	</div>
	<div id="Square" class="method">
		<h4><span title="System.Double[]">Double[]</span> <strong>Square</strong>(<span title="System.int">int</span> length, <span title="System.int">int</span> highDuration, <span title="System.int">int</span> lowDuration, <span title="System.double">double</span> lowValue, <span title="System.double">double</span> highValue, <span title="System.int">int</span> delay)</h4>
		<div class="content">Create a periodic square wave, starting with the high phase. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.int">int</span></code> length</h6>
          <p class="comments">The number of samples to generate. </p>
          <h6><code><span title="System.int">int</span></code> highDuration</h6>
          <p class="comments">Number of samples of the high phase. </p>
          <h6><code><span title="System.int">int</span></code> lowDuration</h6>
          <p class="comments">Number of samples of the low phase. </p>
          <h6><code><span title="System.double">double</span></code> lowValue</h6>
          <p class="comments">Sample value to be emitted during the low phase. </p>
          <h6><code><span title="System.double">double</span></code> highValue</h6>
          <p class="comments">Sample value to be emitted during the high phase. </p>
          <h6><code><span title="System.int">int</span></code> delay</h6>
          <p class="comments">Optional delay. </p>
      </div>

      
    </div>
	</div>
	<div id="SquareSequence" class="method">
		<h4><span title="System.Collections.Generic.IEnumerable<double>">IEnumerable&lt;double&gt;</span> <strong>SquareSequence</strong>(<span title="System.int">int</span> highDuration, <span title="System.int">int</span> lowDuration, <span title="System.double">double</span> lowValue, <span title="System.double">double</span> highValue, <span title="System.int">int</span> delay)</h4>
		<div class="content">Create an infinite periodic square wave sequence, starting with the high phase. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.int">int</span></code> highDuration</h6>
          <p class="comments">Number of samples of the high phase. </p>
          <h6><code><span title="System.int">int</span></code> lowDuration</h6>
          <p class="comments">Number of samples of the low phase. </p>
          <h6><code><span title="System.double">double</span></code> lowValue</h6>
          <p class="comments">Sample value to be emitted during the low phase. </p>
          <h6><code><span title="System.double">double</span></code> highValue</h6>
          <p class="comments">Sample value to be emitted during the high phase. </p>
          <h6><code><span title="System.int">int</span></code> delay</h6>
          <p class="comments">Optional delay. </p>
      </div>

      
    </div>
	</div>
	<div id="Standard" class="method">
		<h4><span title="System.Double[]">Double[]</span> <strong>Standard</strong>(<span title="System.int">int</span> length)</h4>
		<div class="content">Create samples with independent amplitudes of standard distribution. 



      
    </div>
	</div>
	<div id="StandardSequence" class="method">
		<h4><span title="System.Collections.Generic.IEnumerable<double>">IEnumerable&lt;double&gt;</span> <strong>StandardSequence</strong>()</h4>
		<div class="content">Create an infinite sample sequence with independent amplitudes of standard distribution. 



      
    </div>
	</div>
	<div id="Step" class="method">
		<h4><span title="System.Double[]">Double[]</span> <strong>Step</strong>(<span title="System.int">int</span> length, <span title="System.double">double</span> amplitude, <span title="System.int">int</span> delay)</h4>
		<div class="content">Create a Heaviside Step sample vector. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.int">int</span></code> length</h6>
          <p class="comments">The number of samples to generate. </p>
          <h6><code><span title="System.double">double</span></code> amplitude</h6>
          <p class="comments">The maximal reached peak. </p>
          <h6><code><span title="System.int">int</span></code> delay</h6>
          <p class="comments">Offset to the time axis. </p>
      </div>

      
    </div>
	</div>
	<div id="StepSequence" class="method">
		<h4><span title="System.Collections.Generic.IEnumerable<double>">IEnumerable&lt;double&gt;</span> <strong>StepSequence</strong>(<span title="System.double">double</span> amplitude, <span title="System.int">int</span> delay)</h4>
		<div class="content">Create an infinite Heaviside Step sample sequence. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.double">double</span></code> amplitude</h6>
          <p class="comments">The maximal reached peak. </p>
          <h6><code><span title="System.int">int</span></code> delay</h6>
          <p class="comments">Offset to the time axis. </p>
      </div>

      
    </div>
	</div>
	<div id="Triangle" class="method">
		<h4><span title="System.Double[]">Double[]</span> <strong>Triangle</strong>(<span title="System.int">int</span> length, <span title="System.int">int</span> raiseDuration, <span title="System.int">int</span> fallDuration, <span title="System.double">double</span> lowValue, <span title="System.double">double</span> highValue, <span title="System.int">int</span> delay)</h4>
		<div class="content">Create a periodic triangle wave, starting with the raise phase from the lowest sample. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.int">int</span></code> length</h6>
          <p class="comments">The number of samples to generate. </p>
          <h6><code><span title="System.int">int</span></code> raiseDuration</h6>
          <p class="comments">Number of samples of the raise phase. </p>
          <h6><code><span title="System.int">int</span></code> fallDuration</h6>
          <p class="comments">Number of samples of the fall phase. </p>
          <h6><code><span title="System.double">double</span></code> lowValue</h6>
          <p class="comments">Lowest sample value. </p>
          <h6><code><span title="System.double">double</span></code> highValue</h6>
          <p class="comments">Highest sample value. </p>
          <h6><code><span title="System.int">int</span></code> delay</h6>
          <p class="comments">Optional delay. </p>
      </div>

      
    </div>
	</div>
	<div id="TriangleSequence" class="method">
		<h4><span title="System.Collections.Generic.IEnumerable<double>">IEnumerable&lt;double&gt;</span> <strong>TriangleSequence</strong>(<span title="System.int">int</span> raiseDuration, <span title="System.int">int</span> fallDuration, <span title="System.double">double</span> lowValue, <span title="System.double">double</span> highValue, <span title="System.int">int</span> delay)</h4>
		<div class="content">Create an infinite periodic triangle wave sequence, starting with the raise phase from the lowest sample. 


      <div class="parameters">
        <h5>Parameters</h5>

          <h6><code><span title="System.int">int</span></code> raiseDuration</h6>
          <p class="comments">Number of samples of the raise phase. </p>
          <h6><code><span title="System.int">int</span></code> fallDuration</h6>
          <p class="comments">Number of samples of the fall phase. </p>
          <h6><code><span title="System.double">double</span></code> lowValue</h6>
          <p class="comments">Lowest sample value. </p>
          <h6><code><span title="System.double">double</span></code> highValue</h6>
          <p class="comments">Highest sample value. </p>
          <h6><code><span title="System.int">int</span></code> delay</h6>
          <p class="comments">Optional delay. </p>
      </div>

      
    </div>
	</div>
	<div id="Unfold``2" class="method">
		<h4><span title="MathNet.Numerics.T[]">T[]</span> <strong>Unfold&lt;T, TState&gt;</strong>(<span title="System.int">int</span> length, <span title="System.Func<TState, Tuple<T, TState>>">Func&lt;TState, Tuple&lt;T, TState&gt;&gt;</span> f, <span title="MathNet.Numerics.TState">TState</span> state)</h4>
		<div class="content">Generate samples generated by the given computation. 



      
    </div>
	</div>
	<div id="UnfoldSequence``2" class="method">
		<h4><span title="System.Collections.Generic.IEnumerable<T>">IEnumerable&lt;T&gt;</span> <strong>UnfoldSequence&lt;T, TState&gt;</strong>(<span title="System.Func<TState, Tuple<T, TState>>">Func&lt;TState, Tuple&lt;T, TState&gt;&gt;</span> f, <span title="MathNet.Numerics.TState">TState</span> state)</h4>
		<div class="content">Generate an infinite sequence generated by the given computation. 



      
    </div>
	</div>
	<div id="Uniform" class="method">
		<h4><span title="System.Double[]">Double[]</span> <strong>Uniform</strong>(<span title="System.int">int</span> length)</h4>
		<div class="content">Create random samples, uniform between 0 and 1.
Faster than other methods but with reduced guarantees on randomness. 



      
    </div>
	</div>
	<div id="UniformMap``1" class="method">
		<h4><span title="MathNet.Numerics.T[]">T[]</span> <strong>UniformMap&lt;T&gt;</strong>(<span title="System.int">int</span> length, <span title="System.Func<double, T>">Func&lt;double, T&gt;</span> map)</h4>
		<div class="content">Generate samples by sampling a function at samples from a probability distribution, uniform between 0 and 1.
Faster than other methods but with reduced guarantees on randomness. 



      
    </div>
	</div>
	<div id="UniformMap2``1" class="method">
		<h4><span title="MathNet.Numerics.T[]">T[]</span> <strong>UniformMap2&lt;T&gt;</strong>(<span title="System.int">int</span> length, <span title="System.Func<double, double, T>">Func&lt;double, double, T&gt;</span> map)</h4>
		<div class="content">Generate samples by sampling a function at sample pairs from a probability distribution, uniform between 0 and 1.
Faster than other methods but with reduced guarantees on randomness. 



      
    </div>
	</div>
	<div id="UniformMap2Sequence``1" class="method">
		<h4><span title="System.Collections.Generic.IEnumerable<T>">IEnumerable&lt;T&gt;</span> <strong>UniformMap2Sequence&lt;T&gt;</strong>(<span title="System.Func<double, double, T>">Func&lt;double, double, T&gt;</span> map)</h4>
		<div class="content">Generate a sample sequence by sampling a function at sample pairs from a probability distribution, uniform between 0 and 1.
Faster than other methods but with reduced guarantees on randomness. 



      
    </div>
	</div>
	<div id="UniformMapSequence``1" class="method">
		<h4><span title="System.Collections.Generic.IEnumerable<T>">IEnumerable&lt;T&gt;</span> <strong>UniformMapSequence&lt;T&gt;</strong>(<span title="System.Func<double, T>">Func&lt;double, T&gt;</span> map)</h4>
		<div class="content">Generate a sample sequence by sampling a function at samples from a probability distribution, uniform between 0 and 1.
Faster than other methods but with reduced guarantees on randomness. 



      
    </div>
	</div>
	<div id="UniformSequence" class="method">
		<h4><span title="System.Collections.Generic.IEnumerable<double>">IEnumerable&lt;double&gt;</span> <strong>UniformSequence</strong>()</h4>
		<div class="content">Create an infinite random sample sequence, uniform between 0 and 1.
Faster than other methods but with reduced guarantees on randomness. 



      
    </div>
	</div>

	
	<div id="footer">
  <p>Based on v4.15.0.0 of MathNet.Numerics (Math.NET Numerics)</p>
  <p>Generated by <a href="http://docu.jagregory.com">docu</a></p>
</div>
  </body>
</html>